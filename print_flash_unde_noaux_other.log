Namespace(abs_obj='NODE', all=True, cmp=False, confidence=1.0, iter=2, kmax=3, learn=False, node_num=2, outputfile=None, preprocess=False, protocol='flash_unde_noaux', recalculate='y', srcfile=None, support=0.0)
******************************
Preprocessing
typedef:
self.atoms:
collect atoms from NI_Replace3
self.atoms:
collect atoms from NI_Replace4
self.atoms:
collect atoms from NI_InvAck_311
self.atoms:
collect atoms from NI_InvAck_212
self.atoms:
collect atoms from NI_InvAck_113
self.atoms:
collect atoms from NI_InvAck_exists14
self.atoms:
collect atoms from NI_InvAck_exists_Home15
self.atoms:
collect atoms from NI_Inv16
self.atoms:
collect atoms from NI_Inv17
self.atoms:
collect atoms from NI_Remote_PutX18
self.atoms:
collect atoms from NI_Remote_Put20
self.atoms:
collect atoms from NI_Remote_Put21
self.atoms:
collect atoms from NI_Remote_GetX_PutX_Home24
self.atoms:
collect atoms from NI_Remote_GetX_PutX25
self.atoms:
collect atoms from NI_Remote_GetX_Nak_Home26
self.atoms:
collect atoms from NI_Remote_GetX_Nak27
self.atoms:
collect atoms from NI_Local_GetX_PutX_1128
self.atoms:
collect atoms from NI_Local_GetX_PutX_1029
self.atoms:
collect atoms from NI_Local_GetX_PutX_10_Home30
self.atoms:
collect atoms from NI_Local_GetX_PutX_931
self.atoms:
collect atoms from NI_Local_GetX_PutX_932
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_NODE_Get33
self.atoms:
collect atoms from NI_Local_GetX_PutX_834
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home_NODE_Get35
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home36
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get37
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get38
self.atoms:
collect atoms from NI_Local_GetX_PutX_739
self.atoms:
collect atoms from NI_Local_GetX_PutX_740
self.atoms:
collect atoms from NI_Local_GetX_PutX_641
self.atoms:
collect atoms from NI_Local_GetX_PutX_542
self.atoms:
collect atoms from NI_Local_GetX_PutX_443
self.atoms:
collect atoms from NI_Local_GetX_PutX_344
self.atoms:
collect atoms from NI_Local_GetX_PutX_245
self.atoms:
collect atoms from NI_Local_GetX_PutX_146
self.atoms:
collect atoms from NI_Local_GetX_GetX47
self.atoms:
collect atoms from NI_Local_GetX_GetX48
self.atoms:
collect atoms from NI_Local_GetX_Nak49
self.atoms:
collect atoms from NI_Local_GetX_Nak50
self.atoms:
collect atoms from NI_Local_GetX_Nak51
self.atoms:
collect atoms from NI_Remote_Get_Put_Home52
self.atoms:
collect atoms from NI_Remote_Get_Put53
self.atoms:
collect atoms from NI_Remote_Get_Nak_Home54
self.atoms:
collect atoms from NI_Remote_Get_Nak55
self.atoms:
collect atoms from NI_Local_Get_Put_Dirty56
self.atoms:
collect atoms from NI_Local_Get_Put57
self.atoms:
collect atoms from NI_Local_Get_Put_Head58
self.atoms:
collect atoms from NI_Local_Get_Get59
self.atoms:
collect atoms from NI_Local_Get_Get60
self.atoms:
collect atoms from NI_Local_Get_Nak61
self.atoms:
collect atoms from NI_Local_Get_Nak62
self.atoms:
collect atoms from NI_Local_Get_Nak63
self.atoms:
collect atoms from NI_Nak66
self.atoms:
collect atoms from PI_Remote_Replace68
self.atoms:
collect atoms from PI_Remote_PutX71
self.atoms:
collect atoms from PI_Remote_GetX80
self.atoms:
collect atoms from PI_Remote_Get84
self.atoms:
collect atoms from Store_Home85
self.atoms:
collect atoms from Store86
Find atomic predicates: 55

all_types:{'NODE': 'NODE_NUM', 'DATA': 'DATA_NUM'}
[call murphi]compile murphi to cpp....
/home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1 flash_unde_noaux ./protocols
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/flash_unde_noaux.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/flash_unde_noaux.o ./protocols/flash_unde_noaux/flash_unde_noaux.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/flash_unde_noaux.o -m1000 -ta >./protocols/flash_unde_noaux/flash_unde_noaux.txt
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
replace_index:None
files "./protocols/flash_unde_noaux/data/itemMeaning.pkl", "./protocols/flash_unde_noaux/data/dataset.pkl" or "./protocols/flash_unde_noaux/data/para_digit.pkl" do not exist
Reading reachable set
txt2csv...

Index of atomic predicates: {'Sta.Proc[NODE_1].ProcCmd': 0, 'Sta.Proc[NODE_1].InvMarked': 1, 'Sta.Proc[NODE_1].CacheState': 2, 'Sta.Proc[NODE_1].CacheData': 3, 'Sta.Proc[NODE_2].ProcCmd': 4, 'Sta.Proc[NODE_2].InvMarked': 5, 'Sta.Proc[NODE_2].CacheState': 6, 'Sta.Proc[NODE_2].CacheData': 7, 'Sta.Dir.Pending': 8, 'Sta.Dir.Local': 9, 'Sta.Dir.Dirty': 10, 'Sta.Dir.HeadVld': 11, 'Sta.Dir.HeadPtr': 12, 'Sta.Dir.ShrVld': 13, 'Sta.Dir.InvSet[NODE_1]': 14, 'Sta.Dir.InvSet[NODE_2]': 15, 'Sta.Dir.ShrSet[NODE_1]': 16, 'Sta.Dir.ShrSet[NODE_2]': 17, 'Sta.Dir.HomeHeadPtr': 18, 'Sta.Dir.HomeShrSet': 19, 'Sta.Dir.HomeInvSet': 20, 'Sta.MemData': 21, 'Sta.UniMsg[NODE_1].Cmd': 22, 'Sta.UniMsg[NODE_1].Proc': 23, 'Sta.UniMsg[NODE_1].HomeProc': 24, 'Sta.UniMsg[NODE_1].Data': 25, 'Sta.UniMsg[NODE_2].Cmd': 26, 'Sta.UniMsg[NODE_2].Proc': 27, 'Sta.UniMsg[NODE_2].HomeProc': 28, 'Sta.UniMsg[NODE_2].Data': 29, 'Sta.InvMsg[NODE_1].Cmd': 30, 'Sta.InvMsg[NODE_2].Cmd': 31, 'Sta.RpMsg[NODE_1].Cmd': 32, 'Sta.RpMsg[NODE_2].Cmd': 33, 'Sta.WbMsg.Cmd': 34, 'Sta.WbMsg.Proc': 35, 'Sta.WbMsg.HomeProc': 36, 'Sta.WbMsg.Data': 37, 'Sta.ShWbMsg.Cmd': 38, 'Sta.ShWbMsg.Proc': 39, 'Sta.ShWbMsg.HomeProc': 40, 'Sta.ShWbMsg.Data': 41, 'Sta.NakcMsg.Cmd': 42, 'Sta.HomeProc.ProcCmd': 43, 'Sta.HomeProc.InvMarked': 44, 'Sta.HomeProc.CacheState': 45, 'Sta.HomeProc.CacheData': 46, 'Sta.HomeUniMsg.Cmd': 47, 'Sta.HomeUniMsg.Proc': 48, 'Sta.HomeUniMsg.HomeProc': 49, 'Sta.HomeUniMsg.Data': 50, 'Sta.HomeInvMsg.Cmd': 51, 'Sta.HomeRpMsg.Cmd': 52, 'Sta.CurrData': 53}
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
Features / Atomic predicates:  67 
Mapping states into numbers using all variables...
Reachable set: 429260
size of dataset: 429260 * 67
Read existing global variables from "./protocols/flash_unde_noaux/global_vars.txt"
global_vars:{8, 9, 10, 11, 14, 15, 22, 23, 28, 29, 36, 37, 42, 43, 44, 47, 48, 53, 54, 63, 64, 69, 70, 71, 72, 73, 74, 89, 90, 91, 92, 93, 94, 102, 103, 117, 118, 119, 120, 121, 122}
***
Learning
--------------------------
Generating frequent set........
---build_super_set----
build_super_set done
len d: 429260, len ck:131 
time complexity will be: O(56233060)
time for scan L1: 0.000
len(CK):8515
CK:<filter object at 0x7fefdda36f40>
len d: 429260, len ck:8515 
time complexity will be: O(3655148900)
time for scan L2 : 46.438
-------------------

len(CK):311579
CK:<filter object at 0x7fefdda36dc0>
len d: 429260, len ck:303132 
time complexity will be: O(130122442320)
time for scan L3 : 3076.849
-------------------

Running time for frequent sets: 3172.656 s
Running time for calculating association rules: 5.296 s 
length:138003


Association rules: 138003
len(rule_string_list):80921
len(rule_string_list):3541
len(rule_string_list):3333
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o -m1000 -finderrors -ndl
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
counter_ex:['rule_10', 'rule_45', 'rule_76', 'rule_78', 'rule_86', 'rule_95', 'rule_97', 'rule_115', 'rule_131', 'rule_160', 'rule_205', 'rule_229', 'rule_265', 'rule_295', 'rule_331', 'rule_347', 'rule_374', 'rule_417', 'rule_435', 'rule_466', 'rule_509', 'rule_516', 'rule_533', 'rule_545', 'rule_580', 'rule_583', 'rule_585', 'rule_586', 'rule_588', 'rule_590', 'rule_592', 'rule_594', 'rule_597', 'rule_598', 'rule_600', 'rule_602', 'rule_605', 'rule_607', 'rule_608', 'rule_610', 'rule_613', 'rule_615', 'rule_617', 'rule_618', 'rule_620', 'rule_622', 'rule_624', 'rule_627', 'rule_628', 'rule_630', 'rule_633', 'rule_635', 'rule_637', 'rule_638', 'rule_640', 'rule_643', 'rule_644', 'rule_646', 'rule_764', 'rule_772', 'rule_1185', 'rule_1187', 'rule_1193', 'rule_1201', 'rule_1227', 'rule_1256', 'rule_1259', 'rule_1261', 'rule_1268', 'rule_1269', 'rule_1272', 'rule_1274', 'rule_1297', 'rule_1374', 'rule_1391', 'rule_1397', 'rule_1462', 'rule_1486', 'rule_1491', 'rule_1497', 'rule_1498', 'rule_1501', 'rule_1520', 'rule_3293', 'rule_3297', 'rule_3320', 'rule_3325', 'rule_525', 'rule_535', 'rule_540', 'rule_581', 'rule_604', 'rule_780', 'rule_1188', 'rule_1264', 'rule_1267', 'rule_1280', 'rule_1281', 'rule_1286', 'rule_1344', 'rule_1392', 'rule_1490', 'rule_1495', 'rule_1507', 'rule_1508', 'rule_1602', 'rule_2566', 'rule_2595', 'rule_2605', 'rule_2630', 'rule_2645', 'rule_2670', 'rule_2886', 'rule_2887', 'rule_2888', 'rule_2889', 'rule_3127', 'rule_3166', 'rule_3175', 'rule_3264', 'rule_3281', 'rule_3300', 'rule_3307', 'rule_67', 'rule_535', 'rule_595', 'rule_603', 'rule_632', 'rule_634', 'rule_780', 'rule_2566', 'rule_2595', 'rule_2605', 'rule_2630', 'rule_2645', 'rule_2670', 'rule_2886', 'rule_2887', 'rule_2888', 'rule_2889', 'rule_3086', 'rule_3088', 'rule_3096', 'rule_3098', 'rule_3127', 'rule_3166', 'rule_3175', 'rule_3264', 'rule_3281', 'rule_3291', 'rule_3295', 'rule_3300', 'rule_3301', 'rule_3307', 'rule_3308', 'rule_582', 'rule_206', 'rule_216', 'rule_302', 'rule_609', 'rule_656', 'rule_994', 'rule_1197', 'rule_1262', 'rule_1350', 'rule_1401', 'rule_1492', 'rule_1608', 'rule_2557', 'rule_2584', 'rule_2600', 'rule_2620', 'rule_2646', 'rule_2671', 'rule_3117', 'rule_3163', 'rule_3173', 'rule_206', 'rule_302', 'rule_306', 'rule_647', 'rule_656', 'rule_994', 'rule_2557', 'rule_2584', 'rule_2600', 'rule_2620', 'rule_2646', 'rule_2671', 'rule_3117', 'rule_3163', 'rule_3165', 'rule_3168', 'rule_3173', 'rule_3174', 'rule_3177', 'rule_3278', 'rule_3279', 'rule_3286', 'rule_3287', 'rule_612', 'rule_349', 'rule_361', 'rule_363', 'rule_591', 'rule_1190', 'rule_1198', 'rule_1210', 'rule_1212', 'rule_1213', 'rule_1217', 'rule_1221', 'rule_1222', 'rule_1295', 'rule_1309', 'rule_1387', 'rule_1394', 'rule_1402', 'rule_1406', 'rule_1419', 'rule_1421', 'rule_1422', 'rule_1426', 'rule_1431', 'rule_1432', 'rule_1438', 'rule_1441', 'rule_1445', 'rule_1516', 'rule_1524', 'rule_1548', 'rule_2282', 'rule_2313', 'rule_625', 'rule_642', 'rule_71', 'rule_90', 'rule_133', 'rule_146', 'rule_511', 'rule_552', 'rule_571', 'rule_611', 'rule_759', 'rule_767', 'rule_859', 'rule_867', 'rule_869', 'rule_881', 'rule_1195', 'rule_1399', 'rule_1735', 'rule_1764', 'rule_1813', 'rule_1816', 'rule_1824', 'rule_1829', 'rule_1835', 'rule_1837', 'rule_1866', 'rule_1872', 'rule_1881', 'rule_862', 'rule_871', 'rule_876', 'rule_883', 'rule_1831', 'rule_1839', 'rule_1877', 'rule_1883', 'rule_502', 'rule_596', 'rule_606', 'rule_614', 'rule_616', 'rule_1184', 'rule_1192', 'rule_1226', 'rule_1248', 'rule_1250', 'rule_1284', 'rule_1285', 'rule_1341', 'rule_1362', 'rule_1373', 'rule_1396', 'rule_1461', 'rule_1482', 'rule_1511', 'rule_1598', 'rule_1626', 'rule_3292', 'rule_3296', 'rule_3317', 'rule_3322', 'rule_355', 'rule_2271', 'rule_2297', 'rule_1215', 'rule_1424', 'rule_1439', 'rule_2280', 'rule_2309', 'rule_866', 'rule_1834', 'rule_2905', 'rule_2918', 'rule_1263', 'rule_1266', 'rule_1343', 'rule_1489', 'rule_1494', 'rule_1601', 'rule_17', 'rule_47', 'rule_64', 'rule_83', 'rule_91', 'rule_124', 'rule_128', 'rule_141', 'rule_144', 'rule_147', 'rule_171', 'rule_211', 'rule_225', 'rule_236', 'rule_244', 'rule_269', 'rule_298', 'rule_338', 'rule_344', 'rule_352', 'rule_358', 'rule_383', 'rule_401', 'rule_403', 'rule_406', 'rule_408', 'rule_412', 'rule_420', 'rule_423', 'rule_429', 'rule_444', 'rule_475', 'rule_512', 'rule_530', 'rule_537', 'rule_555', 'rule_651', 'rule_666', 'rule_690', 'rule_699', 'rule_727', 'rule_747', 'rule_751', 'rule_760', 'rule_776', 'rule_790', 'rule_792', 'rule_803', 'rule_825', 'rule_837', 'rule_848', 'rule_851', 'rule_860', 'rule_886', 'rule_898', 'rule_905', 'rule_909', 'rule_913', 'rule_915', 'rule_918', 'rule_919', 'rule_922', 'rule_924', 'rule_926', 'rule_927', 'rule_929', 'rule_932', 'rule_933', 'rule_935', 'rule_2402', 'rule_2424', 'rule_2426', 'rule_2467', 'rule_2483', 'rule_2484', 'rule_102', 'rule_117', 'rule_274', 'rule_355', 'rule_376', 'rule_389', 'rule_967', 'rule_1175', 'rule_1176', 'rule_1179', 'rule_1186', 'rule_1209', 'rule_1214', 'rule_1229', 'rule_1367', 'rule_1368', 'rule_1370', 'rule_1377', 'rule_1378', 'rule_1380', 'rule_1385', 'rule_1390', 'rule_1418', 'rule_1423', 'rule_1437', 'rule_1452', 'rule_1458', 'rule_2567', 'rule_2597', 'rule_2606', 'rule_2631', 'rule_2890', 'rule_2891', 'rule_3129', 'rule_3269', 'rule_3282', 'rule_3083', 'rule_3085', 'rule_3093', 'rule_3095', 'rule_72', 'rule_916', 'rule_931', 'rule_3165', 'rule_3168', 'rule_3174', 'rule_3177', 'rule_3291', 'rule_3292', 'rule_3295', 'rule_3296', 'rule_3301', 'rule_3308', 'rule_3317', 'rule_3322', 'rule_1196', 'rule_1346', 'rule_1400', 'rule_1604', 'rule_73', 'rule_92', 'rule_135', 'rule_148', 'rule_513', 'rule_556', 'rule_573', 'rule_623', 'rule_660', 'rule_761', 'rule_769', 'rule_808', 'rule_906', 'rule_942', 'rule_1177', 'rule_1635', 'rule_1655', 'rule_1659', 'rule_2905', 'rule_2918', 'rule_3260', 'rule_3261', 'rule_3276', 'rule_3277', 'rule_937', 'rule_946', 'rule_948', 'rule_955', 'rule_1663', 'rule_1668', 'rule_1296', 'rule_1519', 'rule_428', 'rule_784', 'rule_830', 'rule_921', 'rule_923', 'rule_2398', 'rule_2461', 'rule_231', 'rule_248', 'rule_250', 'rule_438', 'rule_452', 'rule_455', 'rule_589', 'rule_631', 'rule_724', 'rule_732', 'rule_1997', 'rule_2038', 'rule_2501', 'rule_2505', 'rule_2506', 'rule_2507', 'rule_2508', 'rule_2526', 'rule_2532', 'rule_2534', 'rule_2535', 'rule_309', 'rule_936', 'rule_2076', 'rule_2103', 'rule_2419', 'rule_2480', 'rule_865', 'rule_879', 'rule_1744', 'rule_1771', 'rule_1773', 'rule_1833', 'rule_1879', 'rule_2275', 'rule_2300', 'rule_2301', 'rule_2904', 'rule_2916', 'rule_2917', 'rule_1218', 'rule_1219', 'rule_1223', 'rule_1258', 'rule_1271', 'rule_1326', 'rule_1329', 'rule_1330', 'rule_1359', 'rule_1428', 'rule_1429', 'rule_1433', 'rule_1443', 'rule_1444', 'rule_1446', 'rule_1448', 'rule_1500', 'rule_1578', 'rule_1581', 'rule_1582', 'rule_1587', 'rule_1620', 'rule_2607', 'rule_2895', 'rule_2896', 'rule_941', 'rule_1211', 'rule_1220', 'rule_1273', 'rule_1308', 'rule_1420', 'rule_1430', 'rule_1547', 'rule_2278', 'rule_2305', 'rule_2306', 'rule_407', 'rule_418', 'rule_424', 'rule_505', 'rule_659', 'rule_788', 'rule_845', 'rule_895', 'rule_901', 'rule_2372', 'rule_2375', 'rule_2401', 'rule_2413', 'rule_2414', 'rule_2415', 'rule_2466', 'rule_2476', 'rule_2477', 'rule_891', 'rule_109', 'rule_396', 'rule_521', 'rule_742', 'rule_842', 'rule_1024', 'rule_1032', 'rule_1034', 'rule_1061', 'rule_1070', 'rule_1072', 'rule_3005', 'rule_3014', 'rule_3016', 'rule_3021', 'rule_3031', 'rule_3033', 'rule_19', 'rule_49', 'rule_94', 'rule_125', 'rule_149', 'rule_174', 'rule_213', 'rule_238', 'rule_271', 'rule_300', 'rule_336', 'rule_341', 'rule_354', 'rule_384', 'rule_410', 'rule_446', 'rule_478', 'rule_514', 'rule_532', 'rule_539', 'rule_558', 'rule_584', 'rule_653', 'rule_668', 'rule_684', 'rule_686', 'rule_702', 'rule_729', 'rule_749', 'rule_753', 'rule_762', 'rule_778', 'rule_791', 'rule_793', 'rule_805', 'rule_827', 'rule_839', 'rule_847', 'rule_853', 'rule_864', 'rule_888', 'rule_899', 'rule_904', 'rule_907', 'rule_910', 'rule_939', 'rule_957', 'rule_964', 'rule_971', 'rule_974', 'rule_976', 'rule_978', 'rule_979', 'rule_981', 'rule_984', 'rule_985', 'rule_987', 'rule_1020', 'rule_1057', 'rule_2040', 'rule_2055', 'rule_2435', 'rule_2462', 'rule_2619', 'rule_2624', 'rule_2625', 'rule_2626', 'rule_3116', 'rule_3120', 'rule_3121', 'rule_3122', 'rule_619', 'rule_658', 'rule_795', 'rule_1695', 'rule_1726', 'rule_1759', 'rule_1760', 'rule_1784', 'rule_1785', 'rule_2015', 'rule_2058', 'rule_2258', 'rule_2272', 'rule_2274', 'rule_2278', 'rule_2298', 'rule_2305', 'rule_2306', 'rule_2320', 'rule_2341', 'rule_3135', 'rule_3152', 'rule_117', 'rule_274', 'rule_376', 'rule_967', 'rule_2567', 'rule_2597', 'rule_2606', 'rule_2631', 'rule_2890', 'rule_2891', 'rule_3129', 'rule_3269', 'rule_3282', 'rule_75', 'rule_958', 'rule_983', 'rule_1225', 'rule_1279', 'rule_1337', 'rule_1354', 'rule_1355', 'rule_1436', 'rule_1450', 'rule_1506', 'rule_1592', 'rule_1612', 'rule_1614', 'rule_1616', 'rule_504', 'rule_858', 'rule_1275', 'rule_1502', 'rule_1811', 'rule_1828', 'rule_2559', 'rule_2562', 'rule_2907', 'rule_2921', 'rule_641', 'rule_870', 'rule_882', 'rule_1278', 'rule_1353', 'rule_1505', 'rule_1611', 'rule_1838', 'rule_1882', 'rule_506', 'rule_902', 'rule_1351', 'rule_1609', 'rule_2334', 'rule_2907', 'rule_2921', 'rule_61', 'rule_80', 'rule_164', 'rule_169', 'rule_170', 'rule_176', 'rule_177', 'rule_187', 'rule_191', 'rule_2270', 'rule_2296', 'rule_51', 'rule_655', 'rule_1114', 'rule_1117', 'rule_1171', 'rule_1174', 'rule_2397', 'rule_2460', 'rule_55', 'rule_57', 'rule_1094', 'rule_1150', 'rule_786', 'rule_832', 'rule_973', 'rule_975', 'rule_920', 'rule_239', 'rule_428', 'rule_993', 'rule_239', 'rule_282', 'rule_418', 'rule_447', 'rule_626', 'rule_662', 'rule_1756', 'rule_1783', 'rule_2900', 'rule_2911', 'rule_3005', 'rule_3014', 'rule_3016', 'rule_3021', 'rule_3031', 'rule_3033', 'rule_51', 'rule_655', 'rule_2279', 'rule_2307', 'rule_2075', 'rule_2102', 'rule_2417', 'rule_2479', 'rule_311', 'rule_988', 'rule_268', 'rule_285', 'rule_863', 'rule_877', 'rule_1802', 'rule_1832', 'rule_1855', 'rule_1878', 'rule_940', 'rule_951', 'rule_1665', 'rule_1091', 'rule_1145', 'rule_2882', 'rule_3130', 'rule_3233', 'rule_3250', 'rule_3252', 'rule_1074', 'rule_1118', 'rule_1121', 'rule_1181', 'rule_1283', 'rule_1372', 'rule_1382', 'rule_1510', 'rule_2702', 'rule_2732', 'rule_176', 'rule_1670', 'rule_1672', 'rule_1715', 'rule_2314', 'rule_2328', 'rule_2330', 'rule_2363', 'rule_2386', 'rule_2403', 'rule_2439', 'rule_2452', 'rule_2468', 'rule_507', 'rule_661', 'rule_789', 'rule_896', 'rule_903', 'rule_2371', 'rule_893', 'rule_911', 'rule_2407', 'rule_2471', 'rule_523', 'rule_692', 'rule_744', 'rule_844', 'rule_2199', 'rule_2252', 'rule_3169', 'rule_3178', 'rule_3302', 'rule_3309', 'rule_3318', 'rule_3323', 'rule_1189', 'rule_1386', 'rule_1393', 'rule_2270', 'rule_2296', 'rule_2561', 'rule_2577', 'rule_2601', 'rule_2613', 'rule_2652', 'rule_2676', 'rule_2696', 'rule_2724', 'rule_3078', 'rule_3081', 'rule_3090', 'rule_3131', 'rule_3136', 'rule_3148', 'rule_3153', 'rule_3181', 'rule_3188', 'rule_1814', 'rule_1847', 'rule_1890', 'rule_2084', 'rule_2092', 'rule_2094', 'rule_2118', 'rule_2279', 'rule_2307', 'rule_2586', 'rule_2590', 'rule_2621', 'rule_2628', 'rule_3125', 'rule_3140', 'rule_3156', 'rule_3199', 'rule_3201', 'rule_3329', 'rule_3330', 'rule_658', 'rule_795', 'rule_1695', 'rule_1726', 'rule_2015', 'rule_2040', 'rule_2055', 'rule_2058', 'rule_2320', 'rule_2341', 'rule_2624', 'rule_3120', 'rule_3135', 'rule_3152', 'rule_3083', 'rule_3085', 'rule_3093', 'rule_3095', 'rule_3260', 'rule_3261', 'rule_3276', 'rule_3277', 'rule_1183', 'rule_1289', 'rule_1376', 'rule_1384', 'rule_1514', 'rule_3235', 'rule_3241', 'rule_945', 'rule_954', 'rule_1182', 'rule_1288', 'rule_1375', 'rule_1383', 'rule_1513', 'rule_1667', 'rule_2882', 'rule_3071', 'rule_3075', 'rule_3130', 'rule_3233', 'rule_3250', 'rule_3252', 'rule_3327', 'rule_3328', 'rule_169', 'rule_1246', 'rule_1336', 'rule_2272', 'rule_1254', 'rule_1334', 'rule_1694', 'rule_2844', 'rule_3105', 'rule_3106', 'rule_3112', 'rule_3329', 'rule_3330', 'rule_1694', 'rule_2844', 'rule_3106', 'rule_3112', 'rule_443', 'rule_1020', 'rule_1057', 'rule_1755', 'rule_1782', 'rule_1919', 'rule_1968', 'rule_2269', 'rule_2293', 'rule_1110', 'rule_1113', 'rule_1167', 'rule_1170', 'rule_1093', 'rule_1149', 'rule_59', 'rule_2425', 'rule_286', 'rule_917', 'rule_972', 'rule_1913', 'rule_1923', 'rule_1924', 'rule_1926', 'rule_1928', 'rule_1932', 'rule_1933', 'rule_1963', 'rule_1972', 'rule_1974', 'rule_1976', 'rule_1981', 'rule_1982', 'rule_1983', 'rule_2357', 'rule_2399', 'rule_2401', 'rule_2413', 'rule_2414', 'rule_2415', 'rule_2436', 'rule_2463', 'rule_2464', 'rule_2466', 'rule_2476', 'rule_2477', 'rule_2502', 'rule_2528', 'rule_2589', 'rule_2627', 'rule_3007', 'rule_3023', 'rule_3123', 'rule_3138', 'rule_3154', 'rule_3164', 'rule_3172', 'rule_3265', 'rule_3266', 'rule_3268', 'rule_3270', 'rule_3271', 'rule_599', 'rule_1759', 'rule_1760', 'rule_1784', 'rule_1785', 'rule_1913', 'rule_1923', 'rule_1924', 'rule_1926', 'rule_1928', 'rule_1932', 'rule_1933', 'rule_1963', 'rule_1972', 'rule_1974', 'rule_1976', 'rule_1981', 'rule_1982', 'rule_1983', 'rule_2258', 'rule_2274', 'rule_2298', 'rule_2363', 'rule_2375', 'rule_2386', 'rule_2403', 'rule_2407', 'rule_2435', 'rule_2439', 'rule_2452', 'rule_2462', 'rule_2468', 'rule_2471', 'rule_2622', 'rule_2653', 'rule_2677', 'rule_2854', 'rule_2899', 'rule_2910', 'rule_3036', 'rule_3042', 'rule_3119', 'rule_3182', 'rule_3189', 'rule_3205', 'rule_3209', 'rule_1325', 'rule_1328', 'rule_1331', 'rule_1577', 'rule_1580', 'rule_1583', 'rule_1588', 'rule_2550', 'rule_2551', 'rule_2556', 'rule_270', 'rule_287', 'rule_938', 'rule_949', 'rule_1643', 'rule_1664', 'rule_2276', 'rule_2302', 'rule_2303', 'rule_2311', 'rule_2906', 'rule_2919', 'rule_2920', 'rule_175', 'rule_200', 'rule_1708', 'rule_1734', 'rule_2894', 'rule_2894', 'rule_68', 'rule_87', 'rule_587', 'rule_654', 'rule_694', 'rule_701', 'rule_703', 'rule_704', 'rule_705', 'rule_708', 'rule_711', 'rule_717', 'rule_719', 'rule_722', 'rule_1224', 'rule_1257', 'rule_1358', 'rule_1360', 'rule_1434', 'rule_1447', 'rule_1487', 'rule_1619', 'rule_1621', 'rule_1623', 'rule_2007', 'rule_2048', 'rule_2962', 'rule_2971', 'rule_2972', 'rule_2985', 'rule_2996', 'rule_2998', 'rule_3078', 'rule_3116', 'rule_3122', 'rule_2651', 'rule_2695', 'rule_3076', 'rule_3099', 'rule_3102', 'rule_3108', 'rule_1294', 'rule_1515', 'rule_1523', 'rule_542', 'rule_1021', 'rule_1058', 'rule_2366', 'rule_2442', 'rule_3002', 'rule_3018', 'rule_221', 'rule_854', 'rule_1009', 'rule_1030', 'rule_1043', 'rule_1068', 'rule_1806', 'rule_1860', 'rule_2087', 'rule_2114', 'rule_2406', 'rule_2470', 'rule_3012', 'rule_3029', 'rule_912', 'rule_544', 'rule_223', 'rule_856', 'rule_1276', 'rule_1503', 'rule_1751', 'rule_1777', 'rule_2543', 'rule_2546', 'rule_2548', 'rule_2553', 'rule_2604', 'rule_2743', 'rule_2779', 'rule_2842', 'rule_2843', 'rule_2853', 'rule_2861', 'rule_2866', 'rule_2868', 'rule_2876', 'rule_3118', 'rule_3137', 'rule_3203', 'rule_3204', 'rule_2651', 'rule_2695', 'rule_3076', 'rule_3099', 'rule_3102', 'rule_3108', 'rule_2561', 'rule_2577', 'rule_2601', 'rule_2613', 'rule_2619', 'rule_2626', 'rule_2652', 'rule_2676', 'rule_2696', 'rule_2724', 'rule_3081', 'rule_3090', 'rule_3131', 'rule_3136', 'rule_3148', 'rule_3153', 'rule_3181', 'rule_3188', 'rule_1814', 'rule_1847', 'rule_1890', 'rule_2084', 'rule_2092', 'rule_2094', 'rule_2118', 'rule_2586', 'rule_2590', 'rule_2621', 'rule_2628', 'rule_3125', 'rule_3140', 'rule_3156', 'rule_3199', 'rule_3201', 'rule_2862', 'rule_2870', 'rule_2872', 'rule_2878', 'rule_1335', 'rule_1349', 'rule_1357', 'rule_1591', 'rule_1607', 'rule_1617', 'rule_1618', 'rule_66', 'rule_85', 'rule_465', 'rule_470', 'rule_483', 'rule_484', 'rule_488', 'rule_501', 'rule_504', 'rule_546', 'rule_553', 'rule_554', 'rule_560', 'rule_561', 'rule_565', 'rule_858', 'rule_866', 'rule_1236', 'rule_1239', 'rule_1242', 'rule_1244', 'rule_1247', 'rule_1251', 'rule_1465', 'rule_1468', 'rule_1472', 'rule_1474', 'rule_1479', 'rule_1676', 'rule_1811', 'rule_1812', 'rule_1818', 'rule_1828', 'rule_1834', 'rule_1867', 'rule_2083', 'rule_2090', 'rule_2117', 'rule_2334', 'rule_2540', 'rule_2541', 'rule_2550', 'rule_2559', 'rule_2562', 'rule_2565', 'rule_2585', 'rule_2588', 'rule_2591', 'rule_2593', 'rule_2751', 'rule_2755', 'rule_2756', 'rule_2759', 'rule_2762', 'rule_2763', 'rule_2764', 'rule_2776', 'rule_2790', 'rule_2794', 'rule_2798', 'rule_2801', 'rule_2802', 'rule_2803', 'rule_1846', 'rule_2091', 'rule_3103', 'rule_3109', 'rule_1846', 'rule_2091', 'rule_3103', 'rule_3109', 'rule_1348', 'rule_1606', 'rule_3113', 'rule_3215', 'rule_3255', 'rule_3258', 'rule_1699', 'rule_1729', 'rule_3113', 'rule_3215', 'rule_3222', 'rule_3255', 'rule_3258', 'rule_3124', 'rule_3222', 'rule_593', 'rule_1090', 'rule_1096', 'rule_1102', 'rule_1106', 'rule_1112', 'rule_1144', 'rule_1151', 'rule_1160', 'rule_1169', 'rule_1313', 'rule_1557', 'rule_2574', 'rule_2609', 'rule_1110', 'rule_1113', 'rule_1167', 'rule_1170', 'rule_1916', 'rule_1916', 'rule_317', 'rule_336', 'rule_686', 'rule_2625', 'rule_3121', 'rule_1995', 'rule_2034', 'rule_2035', 'rule_2412', 'rule_2418', 'rule_2475', 'rule_796', 'rule_1026', 'rule_1063', 'rule_2357', 'rule_2399', 'rule_2436', 'rule_2463', 'rule_2464', 'rule_3007', 'rule_3023', 'rule_288', 'rule_959', 'rule_1921', 'rule_1970', 'rule_2397', 'rule_2460', 'rule_3084', 'rule_3094', 'rule_1899', 'rule_1935', 'rule_1941', 'rule_1985', 'rule_2075', 'rule_2097', 'rule_2102', 'rule_2122', 'rule_2417', 'rule_2479', 'rule_3273', 'rule_3275', 'rule_1921', 'rule_1970', 'rule_2366', 'rule_2442', 'rule_2697', 'rule_2725', 'rule_3002', 'rule_3018', 'rule_1806', 'rule_1848', 'rule_1860', 'rule_1891', 'rule_1899', 'rule_1935', 'rule_1941', 'rule_1985', 'rule_2087', 'rule_2114', 'rule_2406', 'rule_2470', 'rule_3012', 'rule_3029', 'rule_3200', 'rule_3202', 'rule_2865', 'rule_1090', 'rule_1144', 'rule_3077', 'rule_3089', 'rule_3100', 'rule_3101', 'rule_1105', 'rule_1162', 'rule_321', 'rule_335', 'rule_1803', 'rule_1856', 'rule_2129', 'rule_2136', 'rule_2162', 'rule_2165', 'rule_2211', 'rule_2229', 'rule_1991', 'rule_2028', 'rule_2030', 'rule_2277', 'rule_2304', 'rule_2308', 'rule_154', 'rule_173', 'rule_181', 'rule_198', 'rule_2580', 'rule_2616', 'rule_3035', 'rule_3107', 'rule_698', 'rule_1255', 'rule_2616', 'rule_1184', 'rule_1226', 'rule_1254', 'rule_1258', 'rule_1262', 'rule_1280', 'rule_1281', 'rule_1283', 'rule_1284', 'rule_1285', 'rule_1296', 'rule_1325', 'rule_1328', 'rule_1334', 'rule_1359', 'rule_1362', 'rule_1373', 'rule_1461', 'rule_1492', 'rule_1507', 'rule_1508', 'rule_1510', 'rule_1511', 'rule_1519', 'rule_1577', 'rule_1580', 'rule_1620', 'rule_1626', 'rule_2607', 'rule_2702', 'rule_2732', 'rule_2895', 'rule_2896', 'rule_3105', 'rule_698', 'rule_2647', 'rule_2672', 'rule_2833', 'rule_2954', 'rule_2961', 'rule_2963', 'rule_2966', 'rule_2967', 'rule_2977', 'rule_2986', 'rule_2990', 'rule_2991', 'rule_654', 'rule_704', 'rule_62', 'rule_65', 'rule_69', 'rule_81', 'rule_84', 'rule_88', 'rule_1249', 'rule_1483', 'rule_2000', 'rule_2358', 'rule_2431', 'rule_2432', 'rule_2486', 'rule_2558', 'rule_2568', 'rule_2569', 'rule_2570', 'rule_2571', 'rule_2579', 'rule_2581', 'rule_2583', 'rule_2592', 'rule_2598', 'rule_2599', 'rule_1108', 'rule_1164', 'rule_3050', 'rule_3058', 'rule_1265', 'rule_1298', 'rule_1302', 'rule_1493', 'rule_1496', 'rule_1529', 'rule_1533', 'rule_1537', 'rule_1541', 'rule_2195', 'rule_2247', 'rule_2365', 'rule_2369', 'rule_2378', 'rule_2380', 'rule_2381', 'rule_2383', 'rule_2441', 'rule_2448', 'rule_2450', 'rule_2884', 'rule_2885', 'rule_755', 'rule_1003', 'rule_1037', 'rule_1099', 'rule_1156', 'rule_2359', 'rule_2388', 'rule_2393', 'rule_2396', 'rule_2433', 'rule_2454', 'rule_2459', 'rule_757', 'rule_77', 'rule_96', 'rule_443', 'rule_636', 'rule_763', 'rule_771', 'rule_1755', 'rule_1782', 'rule_1919', 'rule_1927', 'rule_1934', 'rule_1937', 'rule_1938', 'rule_1968', 'rule_1975', 'rule_1984', 'rule_1988', 'rule_1990', 'rule_2269', 'rule_2293', 'rule_2622', 'rule_2899', 'rule_2910', 'rule_3119', 'rule_3170', 'rule_3179', 'rule_3303', 'rule_3310', 'rule_3319', 'rule_3324', 'rule_1634', 'rule_1636', 'rule_1709', 'rule_1761', 'rule_1786', 'rule_3035', 'rule_3107', 'rule_1096', 'rule_1106', 'rule_1108', 'rule_1151', 'rule_1164', 'rule_2574', 'rule_2609', 'rule_3050', 'rule_3058', 'rule_2391', 'rule_2394', 'rule_2457', 'rule_3114', 'rule_3115', 'rule_553', 'rule_2638', 'rule_2662', 'rule_2683', 'rule_2707', 'rule_2758', 'rule_2797', 'rule_506', 'rule_546', 'rule_551', 'rule_557', 'rule_560', 'rule_570', 'rule_574', 'rule_601', 'rule_660', 'rule_758', 'rule_766', 'rule_808', 'rule_902', 'rule_941', 'rule_2011', 'rule_2578', 'rule_2579', 'rule_639', 'rule_1188', 'rule_1192', 'rule_1211', 'rule_1214', 'rule_1220', 'rule_1236', 'rule_1239', 'rule_1242', 'rule_1245', 'rule_1246', 'rule_1247', 'rule_1248', 'rule_1251', 'rule_1282', 'rule_1318', 'rule_1392', 'rule_1396', 'rule_1420', 'rule_1423', 'rule_1430', 'rule_1465', 'rule_1468', 'rule_1472', 'rule_1481', 'rule_1482', 'rule_1509', 'rule_1561', 'rule_1676', 'rule_1812', 'rule_2083', 'rule_2540', 'rule_2541', 'rule_2565', 'rule_2585', 'rule_2588', 'rule_2591', 'rule_2593', 'rule_2542', 'rule_2545', 'rule_3104', 'rule_1289', 'rule_1335', 'rule_1341', 'rule_1349', 'rule_1514', 'rule_1591', 'rule_1598', 'rule_1607', 'rule_3235', 'rule_3241', 'rule_3124', 'rule_2139', 'rule_322', 'rule_797', 'rule_3208', 'rule_3212', 'rule_2864', 'rule_2874', 'rule_993', 'rule_1922', 'rule_1971', 'rule_3087', 'rule_3097', 'rule_2130', 'rule_2137', 'rule_2163', 'rule_2166', 'rule_2212', 'rule_2230', 'rule_1738', 'rule_1766', 'rule_1768', 'rule_323', 'rule_339', 'rule_1647', 'rule_2000', 'rule_1900', 'rule_1936', 'rule_1942', 'rule_1987', 'rule_2098', 'rule_2123', 'rule_3284', 'rule_3285', 'rule_1104', 'rule_3049', 'rule_3077', 'rule_3089', 'rule_3100', 'rule_3101', 'rule_1105', 'rule_1162', 'rule_1288', 'rule_1348', 'rule_1513', 'rule_1606', 'rule_3327', 'rule_3328', 'rule_1250', 'rule_1263', 'rule_1266', 'rule_1343', 'rule_1489', 'rule_1494', 'rule_1601', 'rule_1196', 'rule_1346', 'rule_1400', 'rule_1604', 'rule_2691', 'rule_2718', 'rule_1841', 'rule_1885', 'rule_2965', 'rule_2989', 'rule_2416', 'rule_2478', 'rule_3272', 'rule_3274', 'rule_2647', 'rule_2672', 'rule_2833', 'rule_2954', 'rule_2961', 'rule_2963', 'rule_2966', 'rule_2967', 'rule_2977', 'rule_2986', 'rule_2990', 'rule_2991', 'rule_1249', 'rule_1286', 'rule_1483', 'rule_2558', 'rule_2569', 'rule_2570', 'rule_2571', 'rule_2580', 'rule_2583', 'rule_2592', 'rule_1016', 'rule_2431', 'rule_2568', 'rule_1017', 'rule_2434', 'rule_2608', 'rule_2564', 'rule_2860', 'rule_2356', 'rule_2390', 'rule_2430', 'rule_2456', 'rule_447', 'rule_662', 'rule_1756', 'rule_1783', 'rule_2900', 'rule_2911', 'rule_2869', 'rule_2877', 'rule_3139', 'rule_3155', 'rule_3207', 'rule_3211', 'rule_1104', 'rule_3049', 'rule_2637', 'rule_2661', 'rule_2682', 'rule_2706', 'rule_2754', 'rule_2793', 'rule_2748', 'rule_2785', 'rule_1790', 'rule_1790', 'rule_1796', 'rule_1796', 'rule_1818', 'rule_1867', 'rule_2755', 'rule_2756', 'rule_2759', 'rule_2763', 'rule_2776', 'rule_2794', 'rule_2798', 'rule_2802', 'rule_2578', 'rule_2615', 'rule_3114', 'rule_3115', 'rule_2148', 'rule_325', 'rule_2384', 'rule_2451', 'rule_3011', 'rule_3028', 'rule_2002', 'rule_2043', 'rule_2863', 'rule_2873', 'rule_2132', 'rule_2140', 'rule_2159', 'rule_2182', 'rule_2187', 'rule_2190', 'rule_2191', 'rule_2214', 'rule_2226', 'rule_2239', 'rule_2243', 'rule_2245', 'rule_2281', 'rule_2310', 'rule_2312', 'rule_2880', 'rule_2881', 'rule_3126', 'rule_3128', 'rule_3231', 'rule_3232', 'rule_3248', 'rule_3249', 'rule_3251', 'rule_155', 'rule_182', 'rule_1112', 'rule_1169', 'rule_1313', 'rule_1557', 'rule_2957', 'rule_2980', 'rule_2691', 'rule_2718', 'rule_1841', 'rule_1885', 'rule_2965', 'rule_2989', 'rule_2582', 'rule_2434', 'rule_2487', 'rule_2608', 'rule_2617', 'rule_2223', 'rule_2618', 'rule_3164', 'rule_3172', 'rule_3265', 'rule_3266', 'rule_3268', 'rule_3270', 'rule_3271', 'rule_1299', 'rule_1530', 'rule_1538', 'rule_2379', 'rule_2382', 'rule_2449', 'rule_2653', 'rule_2677', 'rule_2854', 'rule_3036', 'rule_3042', 'rule_3182', 'rule_3189', 'rule_3205', 'rule_3209', 'rule_1701', 'rule_1704', 'rule_1731', 'rule_3225', 'rule_3229', 'rule_2206', 'rule_2207', 'rule_2256', 'rule_3306', 'rule_3315', 'rule_3316', 'rule_2747', 'rule_2784', 'rule_1202', 'rule_1235', 'rule_1252', 'rule_1252', 'rule_1277', 'rule_1287', 'rule_1315', 'rule_1332', 'rule_1342', 'rule_1347', 'rule_1352', 'rule_1364', 'rule_1405', 'rule_1409', 'rule_1475', 'rule_1480', 'rule_1484', 'rule_1484', 'rule_1504', 'rule_1512', 'rule_1567', 'rule_1575', 'rule_1584', 'rule_1589', 'rule_1597', 'rule_1599', 'rule_1605', 'rule_1610', 'rule_1628', 'rule_1629', 'rule_1365', 'rule_1630', 'rule_1631', 'rule_2638', 'rule_2662', 'rule_2683', 'rule_2707', 'rule_2758', 'rule_2797', 'rule_2260', 'rule_2260', 'rule_2286', 'rule_2286', 'rule_2751', 'rule_2760', 'rule_2760', 'rule_2762', 'rule_2764', 'rule_2790', 'rule_2799', 'rule_2799', 'rule_2801', 'rule_2803', 'rule_3084', 'rule_3094', 'rule_2127', 'rule_2128', 'rule_2131', 'rule_2134', 'rule_2135', 'rule_2138', 'rule_2195', 'rule_2209', 'rule_2210', 'rule_2213', 'rule_2247', 'rule_2884', 'rule_2885', 'rule_1689', 'rule_1691', 'rule_1724', 'rule_2318', 'rule_2336', 'rule_2338', 'rule_2969', 'rule_2993', 'rule_2097', 'rule_2122', 'rule_3273', 'rule_3275', 'rule_2181', 'rule_2186', 'rule_2192', 'rule_2193', 'rule_2238', 'rule_2242', 'rule_2246', 'rule_3110', 'rule_3111', 'rule_3213', 'rule_3214', 'rule_3253', 'rule_3254', 'rule_3257', 'rule_2222', 'rule_1646', 'rule_1648', 'rule_1706', 'rule_1707', 'rule_1713', 'rule_1733', 'rule_2160', 'rule_2227', 'rule_2892', 'rule_2893', 'rule_2942', 'rule_2953', 'rule_3039', 'rule_3047', 'rule_2551', 'rule_2556', 'rule_2761', 'rule_2800', 'rule_1081', 'rule_1093', 'rule_1111', 'rule_1129', 'rule_1149', 'rule_1168', 'rule_2957', 'rule_2980', 'rule_1216', 'rule_1425', 'rule_1440', 'rule_2697', 'rule_2725', 'rule_1848', 'rule_1891', 'rule_3200', 'rule_3202', 'rule_1745', 'rule_1746', 'rule_1774', 'rule_2223', 'rule_1347', 'rule_1605', 'rule_2637', 'rule_2661', 'rule_2682', 'rule_2706', 'rule_1076', 'rule_1120', 'rule_1123', 'rule_2754', 'rule_2793', 'rule_2748', 'rule_2785', 'rule_2384', 'rule_2451', 'rule_3011', 'rule_3028', 'rule_2145', 'rule_2146', 'rule_2147', 'rule_2152', 'rule_2153', 'rule_2154', 'rule_2218', 'rule_2219', 'rule_2220', 'rule_2158', 'rule_2225', 'rule_2502', 'rule_2528', 'rule_2589', 'rule_2627', 'rule_3123', 'rule_3138', 'rule_3154', 'rule_1641', 'rule_1642', 'rule_1674', 'rule_1675', 'rule_1692', 'rule_1693', 'rule_1711', 'rule_1717', 'rule_1725', 'rule_1911', 'rule_1929', 'rule_1959', 'rule_1960', 'rule_1977', 'rule_2316', 'rule_2319', 'rule_2332', 'rule_2333', 'rule_2339', 'rule_2340', 'rule_2503', 'rule_2529', 'rule_3008', 'rule_3024', 'rule_1339', 'rule_1594', 'rule_3206', 'rule_3210', 'rule_3139', 'rule_3155', 'rule_3207', 'rule_3211', 'rule_1920', 'rule_1969', 'rule_2222', 'rule_2486', 'rule_2581', 'rule_1079', 'rule_1127', 'rule_2494', 'rule_2517', 'rule_2519', 'rule_44', 'rule_54', 'rule_1077', 'rule_1079', 'rule_1080', 'rule_1081', 'rule_1089', 'rule_1097', 'rule_1099', 'rule_1124', 'rule_1125', 'rule_1127', 'rule_1128', 'rule_1129', 'rule_1132', 'rule_1143', 'rule_1146', 'rule_1153', 'rule_1154', 'rule_1156', 'rule_2081', 'rule_2108', 'rule_2110', 'rule_2356', 'rule_2388', 'rule_2430', 'rule_2454', 'rule_2573', 'rule_2575', 'rule_3051', 'rule_3059', 'rule_2078', 'rule_2105', 'rule_2109', 'rule_2496', 'rule_2523', 'rule_2525', 'rule_682', 'rule_1671', 'rule_1673', 'rule_1716', 'rule_2315', 'rule_2329', 'rule_2331', 'rule_2409', 'rule_2473', 'rule_2747', 'rule_2784', 'rule_2546', 'rule_3118', 'rule_2545', 'rule_3104', 'rule_314', 'rule_328', 'rule_1739', 'rule_1740', 'rule_1767', 'rule_1903', 'rule_1944', 'rule_1952', 'rule_2126', 'rule_2133', 'rule_2208', 'rule_1085', 'rule_1135', 'rule_1139', 'rule_2144', 'rule_2151', 'rule_2217', 'rule_1203', 'rule_1410', 'rule_1414', 'rule_2160', 'rule_2181', 'rule_2186', 'rule_2227', 'rule_2238', 'rule_2242', 'rule_2892', 'rule_2893', 'rule_2942', 'rule_2953', 'rule_3039', 'rule_3047', 'rule_3110', 'rule_3111', 'rule_3213', 'rule_3214', 'rule_1082', 'rule_1115', 'rule_1130', 'rule_1172', 'rule_1920', 'rule_1969', 'rule_1273', 'rule_1308', 'rule_1547', 'rule_2390', 'rule_2456', 'rule_3054', 'rule_3062', 'rule_2487', 'rule_2617', 'rule_1336', 'rule_1255', 'rule_1949', 'rule_1989', 'rule_2200', 'rule_3311', 'rule_2161', 'rule_2164', 'rule_2228', 'rule_1086', 'rule_1136', 'rule_1140', 'rule_1902', 'rule_1951', 'rule_1902', 'rule_1951', 'rule_1699', 'rule_1729', 'rule_1993', 'rule_2003', 'rule_2014', 'rule_2017', 'rule_2021', 'rule_2027', 'rule_2029', 'rule_2031', 'rule_2044', 'rule_2056', 'rule_2060', 'rule_2064', 'rule_2065', 'rule_2072', 'rule_2073', 'rule_2322', 'rule_2344', 'rule_2548', 'rule_2553', 'rule_2564', 'rule_2761', 'rule_2800', 'rule_2853', 'rule_2860', 'rule_2865', 'rule_3069', 'rule_3072', 'rule_3137', 'rule_3203', 'rule_3204', 'rule_1111', 'rule_1168', 'rule_2013', 'rule_2022', 'rule_2054', 'rule_2066', 'rule_2067', 'rule_1644', 'rule_1645', 'rule_1708', 'rule_1712', 'rule_1734', 'rule_2004', 'rule_2018', 'rule_2045', 'rule_2061', 'rule_2327', 'rule_2353', 'rule_318', 'rule_332', 'rule_1339', 'rule_1594', 'rule_3206', 'rule_3210', 'rule_1905', 'rule_1906', 'rule_1907', 'rule_1946', 'rule_1947', 'rule_1948', 'rule_1954', 'rule_1955', 'rule_1956', 'rule_2178', 'rule_2180', 'rule_2184', 'rule_2185', 'rule_2194', 'rule_2197', 'rule_2237', 'rule_2241', 'rule_2249', 'rule_1092', 'rule_1101', 'rule_1147', 'rule_1148', 'rule_1158', 'rule_1159', 'rule_2004', 'rule_2013', 'rule_2017', 'rule_2045', 'rule_2054', 'rule_2060', 'rule_2322', 'rule_2327', 'rule_2344', 'rule_2353', 'rule_2143', 'rule_2150', 'rule_2169', 'rule_2170', 'rule_2216', 'rule_2232', 'rule_1078', 'rule_1088', 'rule_1126', 'rule_1131', 'rule_1138', 'rule_1142', 'rule_1898', 'rule_1931', 'rule_1939', 'rule_1940', 'rule_1980', 'rule_1986', 'rule_2023', 'rule_2068', 'rule_2069', 'rule_3262', 'rule_3263', 'rule_3280', 'rule_1904', 'rule_1945', 'rule_1953']
rule_10,rule_45,rule_76,rule_78,rule_86,rule_95,rule_97,rule_115,rule_131,rule_160,rule_205,rule_229,rule_265,rule_295,rule_331,rule_347,rule_374,rule_417,rule_435,rule_466,rule_509,rule_516,rule_533,rule_545,rule_580,rule_583,rule_585,rule_586,rule_588,rule_590,rule_592,rule_594,rule_597,rule_598,rule_600,rule_602,rule_605,rule_607,rule_608,rule_610,rule_613,rule_615,rule_617,rule_618,rule_620,rule_622,rule_624,rule_627,rule_628,rule_630,rule_633,rule_635,rule_637,rule_638,rule_640,rule_643,rule_644,rule_646,rule_764,rule_772,rule_1185,rule_1187,rule_1193,rule_1201,rule_1227,rule_1256,rule_1259,rule_1261,rule_1268,rule_1269,rule_1272,rule_1274,rule_1297,rule_1374,rule_1391,rule_1397,rule_1462,rule_1486,rule_1491,rule_1497,rule_1498,rule_1501,rule_1520,rule_3293,rule_3297,rule_3320,rule_3325,rule_525,rule_535,rule_540,rule_581,rule_604,rule_780,rule_1188,rule_1264,rule_1267,rule_1280,rule_1281,rule_1286,rule_1344,rule_1392,rule_1490,rule_1495,rule_1507,rule_1508,rule_1602,rule_2566,rule_2595,rule_2605,rule_2630,rule_2645,rule_2670,rule_2886,rule_2887,rule_2888,rule_2889,rule_3127,rule_3166,rule_3175,rule_3264,rule_3281,rule_3300,rule_3307,rule_67,rule_535,rule_595,rule_603,rule_632,rule_634,rule_780,rule_2566,rule_2595,rule_2605,rule_2630,rule_2645,rule_2670,rule_2886,rule_2887,rule_2888,rule_2889,rule_3086,rule_3088,rule_3096,rule_3098,rule_3127,rule_3166,rule_3175,rule_3264,rule_3281,rule_3291,rule_3295,rule_3300,rule_3301,rule_3307,rule_3308,rule_582,rule_206,rule_216,rule_302,rule_609,rule_656,rule_994,rule_1197,rule_1262,rule_1350,rule_1401,rule_1492,rule_1608,rule_2557,rule_2584,rule_2600,rule_2620,rule_2646,rule_2671,rule_3117,rule_3163,rule_3173,rule_206,rule_302,rule_306,rule_647,rule_656,rule_994,rule_2557,rule_2584,rule_2600,rule_2620,rule_2646,rule_2671,rule_3117,rule_3163,rule_3165,rule_3168,rule_3173,rule_3174,rule_3177,rule_3278,rule_3279,rule_3286,rule_3287,rule_612,rule_349,rule_361,rule_363,rule_591,rule_1190,rule_1198,rule_1210,rule_1212,rule_1213,rule_1217,rule_1221,rule_1222,rule_1295,rule_1309,rule_1387,rule_1394,rule_1402,rule_1406,rule_1419,rule_1421,rule_1422,rule_1426,rule_1431,rule_1432,rule_1438,rule_1441,rule_1445,rule_1516,rule_1524,rule_1548,rule_2282,rule_2313,rule_625,rule_642,rule_71,rule_90,rule_133,rule_146,rule_511,rule_552,rule_571,rule_611,rule_759,rule_767,rule_859,rule_867,rule_869,rule_881,rule_1195,rule_1399,rule_1735,rule_1764,rule_1813,rule_1816,rule_1824,rule_1829,rule_1835,rule_1837,rule_1866,rule_1872,rule_1881,rule_862,rule_871,rule_876,rule_883,rule_1831,rule_1839,rule_1877,rule_1883,rule_502,rule_596,rule_606,rule_614,rule_616,rule_1184,rule_1192,rule_1226,rule_1248,rule_1250,rule_1284,rule_1285,rule_1341,rule_1362,rule_1373,rule_1396,rule_1461,rule_1482,rule_1511,rule_1598,rule_1626,rule_3292,rule_3296,rule_3317,rule_3322,rule_355,rule_2271,rule_2297,rule_1215,rule_1424,rule_1439,rule_2280,rule_2309,rule_866,rule_1834,rule_2905,rule_2918,rule_1263,rule_1266,rule_1343,rule_1489,rule_1494,rule_1601,rule_17,rule_47,rule_64,rule_83,rule_91,rule_124,rule_128,rule_141,rule_144,rule_147,rule_171,rule_211,rule_225,rule_236,rule_244,rule_269,rule_298,rule_338,rule_344,rule_352,rule_358,rule_383,rule_401,rule_403,rule_406,rule_408,rule_412,rule_420,rule_423,rule_429,rule_444,rule_475,rule_512,rule_530,rule_537,rule_555,rule_651,rule_666,rule_690,rule_699,rule_727,rule_747,rule_751,rule_760,rule_776,rule_790,rule_792,rule_803,rule_825,rule_837,rule_848,rule_851,rule_860,rule_886,rule_898,rule_905,rule_909,rule_913,rule_915,rule_918,rule_919,rule_922,rule_924,rule_926,rule_927,rule_929,rule_932,rule_933,rule_935,rule_2402,rule_2424,rule_2426,rule_2467,rule_2483,rule_2484,rule_102,rule_117,rule_274,rule_355,rule_376,rule_389,rule_967,rule_1175,rule_1176,rule_1179,rule_1186,rule_1209,rule_1214,rule_1229,rule_1367,rule_1368,rule_1370,rule_1377,rule_1378,rule_1380,rule_1385,rule_1390,rule_1418,rule_1423,rule_1437,rule_1452,rule_1458,rule_2567,rule_2597,rule_2606,rule_2631,rule_2890,rule_2891,rule_3129,rule_3269,rule_3282,rule_3083,rule_3085,rule_3093,rule_3095,rule_72,rule_916,rule_931,rule_3165,rule_3168,rule_3174,rule_3177,rule_3291,rule_3292,rule_3295,rule_3296,rule_3301,rule_3308,rule_3317,rule_3322,rule_1196,rule_1346,rule_1400,rule_1604,rule_73,rule_92,rule_135,rule_148,rule_513,rule_556,rule_573,rule_623,rule_660,rule_761,rule_769,rule_808,rule_906,rule_942,rule_1177,rule_1635,rule_1655,rule_1659,rule_2905,rule_2918,rule_3260,rule_3261,rule_3276,rule_3277,rule_937,rule_946,rule_948,rule_955,rule_1663,rule_1668,rule_1296,rule_1519,rule_428,rule_784,rule_830,rule_921,rule_923,rule_2398,rule_2461,rule_231,rule_248,rule_250,rule_438,rule_452,rule_455,rule_589,rule_631,rule_724,rule_732,rule_1997,rule_2038,rule_2501,rule_2505,rule_2506,rule_2507,rule_2508,rule_2526,rule_2532,rule_2534,rule_2535,rule_309,rule_936,rule_2076,rule_2103,rule_2419,rule_2480,rule_865,rule_879,rule_1744,rule_1771,rule_1773,rule_1833,rule_1879,rule_2275,rule_2300,rule_2301,rule_2904,rule_2916,rule_2917,rule_1218,rule_1219,rule_1223,rule_1258,rule_1271,rule_1326,rule_1329,rule_1330,rule_1359,rule_1428,rule_1429,rule_1433,rule_1443,rule_1444,rule_1446,rule_1448,rule_1500,rule_1578,rule_1581,rule_1582,rule_1587,rule_1620,rule_2607,rule_2895,rule_2896,rule_941,rule_1211,rule_1220,rule_1273,rule_1308,rule_1420,rule_1430,rule_1547,rule_2278,rule_2305,rule_2306,rule_407,rule_418,rule_424,rule_505,rule_659,rule_788,rule_845,rule_895,rule_901,rule_2372,rule_2375,rule_2401,rule_2413,rule_2414,rule_2415,rule_2466,rule_2476,rule_2477,rule_891,rule_109,rule_396,rule_521,rule_742,rule_842,rule_1024,rule_1032,rule_1034,rule_1061,rule_1070,rule_1072,rule_3005,rule_3014,rule_3016,rule_3021,rule_3031,rule_3033,rule_19,rule_49,rule_94,rule_125,rule_149,rule_174,rule_213,rule_238,rule_271,rule_300,rule_336,rule_341,rule_354,rule_384,rule_410,rule_446,rule_478,rule_514,rule_532,rule_539,rule_558,rule_584,rule_653,rule_668,rule_684,rule_686,rule_702,rule_729,rule_749,rule_753,rule_762,rule_778,rule_791,rule_793,rule_805,rule_827,rule_839,rule_847,rule_853,rule_864,rule_888,rule_899,rule_904,rule_907,rule_910,rule_939,rule_957,rule_964,rule_971,rule_974,rule_976,rule_978,rule_979,rule_981,rule_984,rule_985,rule_987,rule_1020,rule_1057,rule_2040,rule_2055,rule_2435,rule_2462,rule_2619,rule_2624,rule_2625,rule_2626,rule_3116,rule_3120,rule_3121,rule_3122,rule_619,rule_658,rule_795,rule_1695,rule_1726,rule_1759,rule_1760,rule_1784,rule_1785,rule_2015,rule_2058,rule_2258,rule_2272,rule_2274,rule_2278,rule_2298,rule_2305,rule_2306,rule_2320,rule_2341,rule_3135,rule_3152,rule_117,rule_274,rule_376,rule_967,rule_2567,rule_2597,rule_2606,rule_2631,rule_2890,rule_2891,rule_3129,rule_3269,rule_3282,rule_75,rule_958,rule_983,rule_1225,rule_1279,rule_1337,rule_1354,rule_1355,rule_1436,rule_1450,rule_1506,rule_1592,rule_1612,rule_1614,rule_1616,rule_504,rule_858,rule_1275,rule_1502,rule_1811,rule_1828,rule_2559,rule_2562,rule_2907,rule_2921,rule_641,rule_870,rule_882,rule_1278,rule_1353,rule_1505,rule_1611,rule_1838,rule_1882,rule_506,rule_902,rule_1351,rule_1609,rule_2334,rule_2907,rule_2921,rule_61,rule_80,rule_164,rule_169,rule_170,rule_176,rule_177,rule_187,rule_191,rule_2270,rule_2296,rule_51,rule_655,rule_1114,rule_1117,rule_1171,rule_1174,rule_2397,rule_2460,rule_55,rule_57,rule_1094,rule_1150,rule_786,rule_832,rule_973,rule_975,rule_920,rule_239,rule_428,rule_993,rule_239,rule_282,rule_418,rule_447,rule_626,rule_662,rule_1756,rule_1783,rule_2900,rule_2911,rule_3005,rule_3014,rule_3016,rule_3021,rule_3031,rule_3033,rule_51,rule_655,rule_2279,rule_2307,rule_2075,rule_2102,rule_2417,rule_2479,rule_311,rule_988,rule_268,rule_285,rule_863,rule_877,rule_1802,rule_1832,rule_1855,rule_1878,rule_940,rule_951,rule_1665,rule_1091,rule_1145,rule_2882,rule_3130,rule_3233,rule_3250,rule_3252,rule_1074,rule_1118,rule_1121,rule_1181,rule_1283,rule_1372,rule_1382,rule_1510,rule_2702,rule_2732,rule_176,rule_1670,rule_1672,rule_1715,rule_2314,rule_2328,rule_2330,rule_2363,rule_2386,rule_2403,rule_2439,rule_2452,rule_2468,rule_507,rule_661,rule_789,rule_896,rule_903,rule_2371,rule_893,rule_911,rule_2407,rule_2471,rule_523,rule_692,rule_744,rule_844,rule_2199,rule_2252,rule_3169,rule_3178,rule_3302,rule_3309,rule_3318,rule_3323,rule_1189,rule_1386,rule_1393,rule_2270,rule_2296,rule_2561,rule_2577,rule_2601,rule_2613,rule_2652,rule_2676,rule_2696,rule_2724,rule_3078,rule_3081,rule_3090,rule_3131,rule_3136,rule_3148,rule_3153,rule_3181,rule_3188,rule_1814,rule_1847,rule_1890,rule_2084,rule_2092,rule_2094,rule_2118,rule_2279,rule_2307,rule_2586,rule_2590,rule_2621,rule_2628,rule_3125,rule_3140,rule_3156,rule_3199,rule_3201,rule_3329,rule_3330,rule_658,rule_795,rule_1695,rule_1726,rule_2015,rule_2040,rule_2055,rule_2058,rule_2320,rule_2341,rule_2624,rule_3120,rule_3135,rule_3152,rule_3083,rule_3085,rule_3093,rule_3095,rule_3260,rule_3261,rule_3276,rule_3277,rule_1183,rule_1289,rule_1376,rule_1384,rule_1514,rule_3235,rule_3241,rule_945,rule_954,rule_1182,rule_1288,rule_1375,rule_1383,rule_1513,rule_1667,rule_2882,rule_3071,rule_3075,rule_3130,rule_3233,rule_3250,rule_3252,rule_3327,rule_3328,rule_169,rule_1246,rule_1336,rule_2272,rule_1254,rule_1334,rule_1694,rule_2844,rule_3105,rule_3106,rule_3112,rule_3329,rule_3330,rule_1694,rule_2844,rule_3106,rule_3112,rule_443,rule_1020,rule_1057,rule_1755,rule_1782,rule_1919,rule_1968,rule_2269,rule_2293,rule_1110,rule_1113,rule_1167,rule_1170,rule_1093,rule_1149,rule_59,rule_2425,rule_286,rule_917,rule_972,rule_1913,rule_1923,rule_1924,rule_1926,rule_1928,rule_1932,rule_1933,rule_1963,rule_1972,rule_1974,rule_1976,rule_1981,rule_1982,rule_1983,rule_2357,rule_2399,rule_2401,rule_2413,rule_2414,rule_2415,rule_2436,rule_2463,rule_2464,rule_2466,rule_2476,rule_2477,rule_2502,rule_2528,rule_2589,rule_2627,rule_3007,rule_3023,rule_3123,rule_3138,rule_3154,rule_3164,rule_3172,rule_3265,rule_3266,rule_3268,rule_3270,rule_3271,rule_599,rule_1759,rule_1760,rule_1784,rule_1785,rule_1913,rule_1923,rule_1924,rule_1926,rule_1928,rule_1932,rule_1933,rule_1963,rule_1972,rule_1974,rule_1976,rule_1981,rule_1982,rule_1983,rule_2258,rule_2274,rule_2298,rule_2363,rule_2375,rule_2386,rule_2403,rule_2407,rule_2435,rule_2439,rule_2452,rule_2462,rule_2468,rule_2471,rule_2622,rule_2653,rule_2677,rule_2854,rule_2899,rule_2910,rule_3036,rule_3042,rule_3119,rule_3182,rule_3189,rule_3205,rule_3209,rule_1325,rule_1328,rule_1331,rule_1577,rule_1580,rule_1583,rule_1588,rule_2550,rule_2551,rule_2556,rule_270,rule_287,rule_938,rule_949,rule_1643,rule_1664,rule_2276,rule_2302,rule_2303,rule_2311,rule_2906,rule_2919,rule_2920,rule_175,rule_200,rule_1708,rule_1734,rule_2894,rule_2894,rule_68,rule_87,rule_587,rule_654,rule_694,rule_701,rule_703,rule_704,rule_705,rule_708,rule_711,rule_717,rule_719,rule_722,rule_1224,rule_1257,rule_1358,rule_1360,rule_1434,rule_1447,rule_1487,rule_1619,rule_1621,rule_1623,rule_2007,rule_2048,rule_2962,rule_2971,rule_2972,rule_2985,rule_2996,rule_2998,rule_3078,rule_3116,rule_3122,rule_2651,rule_2695,rule_3076,rule_3099,rule_3102,rule_3108,rule_1294,rule_1515,rule_1523,rule_542,rule_1021,rule_1058,rule_2366,rule_2442,rule_3002,rule_3018,rule_221,rule_854,rule_1009,rule_1030,rule_1043,rule_1068,rule_1806,rule_1860,rule_2087,rule_2114,rule_2406,rule_2470,rule_3012,rule_3029,rule_912,rule_544,rule_223,rule_856,rule_1276,rule_1503,rule_1751,rule_1777,rule_2543,rule_2546,rule_2548,rule_2553,rule_2604,rule_2743,rule_2779,rule_2842,rule_2843,rule_2853,rule_2861,rule_2866,rule_2868,rule_2876,rule_3118,rule_3137,rule_3203,rule_3204,rule_2651,rule_2695,rule_3076,rule_3099,rule_3102,rule_3108,rule_2561,rule_2577,rule_2601,rule_2613,rule_2619,rule_2626,rule_2652,rule_2676,rule_2696,rule_2724,rule_3081,rule_3090,rule_3131,rule_3136,rule_3148,rule_3153,rule_3181,rule_3188,rule_1814,rule_1847,rule_1890,rule_2084,rule_2092,rule_2094,rule_2118,rule_2586,rule_2590,rule_2621,rule_2628,rule_3125,rule_3140,rule_3156,rule_3199,rule_3201,rule_2862,rule_2870,rule_2872,rule_2878,rule_1335,rule_1349,rule_1357,rule_1591,rule_1607,rule_1617,rule_1618,rule_66,rule_85,rule_465,rule_470,rule_483,rule_484,rule_488,rule_501,rule_504,rule_546,rule_553,rule_554,rule_560,rule_561,rule_565,rule_858,rule_866,rule_1236,rule_1239,rule_1242,rule_1244,rule_1247,rule_1251,rule_1465,rule_1468,rule_1472,rule_1474,rule_1479,rule_1676,rule_1811,rule_1812,rule_1818,rule_1828,rule_1834,rule_1867,rule_2083,rule_2090,rule_2117,rule_2334,rule_2540,rule_2541,rule_2550,rule_2559,rule_2562,rule_2565,rule_2585,rule_2588,rule_2591,rule_2593,rule_2751,rule_2755,rule_2756,rule_2759,rule_2762,rule_2763,rule_2764,rule_2776,rule_2790,rule_2794,rule_2798,rule_2801,rule_2802,rule_2803,rule_1846,rule_2091,rule_3103,rule_3109,rule_1846,rule_2091,rule_3103,rule_3109,rule_1348,rule_1606,rule_3113,rule_3215,rule_3255,rule_3258,rule_1699,rule_1729,rule_3113,rule_3215,rule_3222,rule_3255,rule_3258,rule_3124,rule_3222,rule_593,rule_1090,rule_1096,rule_1102,rule_1106,rule_1112,rule_1144,rule_1151,rule_1160,rule_1169,rule_1313,rule_1557,rule_2574,rule_2609,rule_1110,rule_1113,rule_1167,rule_1170,rule_1916,rule_1916,rule_317,rule_336,rule_686,rule_2625,rule_3121,rule_1995,rule_2034,rule_2035,rule_2412,rule_2418,rule_2475,rule_796,rule_1026,rule_1063,rule_2357,rule_2399,rule_2436,rule_2463,rule_2464,rule_3007,rule_3023,rule_288,rule_959,rule_1921,rule_1970,rule_2397,rule_2460,rule_3084,rule_3094,rule_1899,rule_1935,rule_1941,rule_1985,rule_2075,rule_2097,rule_2102,rule_2122,rule_2417,rule_2479,rule_3273,rule_3275,rule_1921,rule_1970,rule_2366,rule_2442,rule_2697,rule_2725,rule_3002,rule_3018,rule_1806,rule_1848,rule_1860,rule_1891,rule_1899,rule_1935,rule_1941,rule_1985,rule_2087,rule_2114,rule_2406,rule_2470,rule_3012,rule_3029,rule_3200,rule_3202,rule_2865,rule_1090,rule_1144,rule_3077,rule_3089,rule_3100,rule_3101,rule_1105,rule_1162,rule_321,rule_335,rule_1803,rule_1856,rule_2129,rule_2136,rule_2162,rule_2165,rule_2211,rule_2229,rule_1991,rule_2028,rule_2030,rule_2277,rule_2304,rule_2308,rule_154,rule_173,rule_181,rule_198,rule_2580,rule_2616,rule_3035,rule_3107,rule_698,rule_1255,rule_2616,rule_1184,rule_1226,rule_1254,rule_1258,rule_1262,rule_1280,rule_1281,rule_1283,rule_1284,rule_1285,rule_1296,rule_1325,rule_1328,rule_1334,rule_1359,rule_1362,rule_1373,rule_1461,rule_1492,rule_1507,rule_1508,rule_1510,rule_1511,rule_1519,rule_1577,rule_1580,rule_1620,rule_1626,rule_2607,rule_2702,rule_2732,rule_2895,rule_2896,rule_3105,rule_698,rule_2647,rule_2672,rule_2833,rule_2954,rule_2961,rule_2963,rule_2966,rule_2967,rule_2977,rule_2986,rule_2990,rule_2991,rule_654,rule_704,rule_62,rule_65,rule_69,rule_81,rule_84,rule_88,rule_1249,rule_1483,rule_2000,rule_2358,rule_2431,rule_2432,rule_2486,rule_2558,rule_2568,rule_2569,rule_2570,rule_2571,rule_2579,rule_2581,rule_2583,rule_2592,rule_2598,rule_2599,rule_1108,rule_1164,rule_3050,rule_3058,rule_1265,rule_1298,rule_1302,rule_1493,rule_1496,rule_1529,rule_1533,rule_1537,rule_1541,rule_2195,rule_2247,rule_2365,rule_2369,rule_2378,rule_2380,rule_2381,rule_2383,rule_2441,rule_2448,rule_2450,rule_2884,rule_2885,rule_755,rule_1003,rule_1037,rule_1099,rule_1156,rule_2359,rule_2388,rule_2393,rule_2396,rule_2433,rule_2454,rule_2459,rule_757,rule_77,rule_96,rule_443,rule_636,rule_763,rule_771,rule_1755,rule_1782,rule_1919,rule_1927,rule_1934,rule_1937,rule_1938,rule_1968,rule_1975,rule_1984,rule_1988,rule_1990,rule_2269,rule_2293,rule_2622,rule_2899,rule_2910,rule_3119,rule_3170,rule_3179,rule_3303,rule_3310,rule_3319,rule_3324,rule_1634,rule_1636,rule_1709,rule_1761,rule_1786,rule_3035,rule_3107,rule_1096,rule_1106,rule_1108,rule_1151,rule_1164,rule_2574,rule_2609,rule_3050,rule_3058,rule_2391,rule_2394,rule_2457,rule_3114,rule_3115,rule_553,rule_2638,rule_2662,rule_2683,rule_2707,rule_2758,rule_2797,rule_506,rule_546,rule_551,rule_557,rule_560,rule_570,rule_574,rule_601,rule_660,rule_758,rule_766,rule_808,rule_902,rule_941,rule_2011,rule_2578,rule_2579,rule_639,rule_1188,rule_1192,rule_1211,rule_1214,rule_1220,rule_1236,rule_1239,rule_1242,rule_1245,rule_1246,rule_1247,rule_1248,rule_1251,rule_1282,rule_1318,rule_1392,rule_1396,rule_1420,rule_1423,rule_1430,rule_1465,rule_1468,rule_1472,rule_1481,rule_1482,rule_1509,rule_1561,rule_1676,rule_1812,rule_2083,rule_2540,rule_2541,rule_2565,rule_2585,rule_2588,rule_2591,rule_2593,rule_2542,rule_2545,rule_3104,rule_1289,rule_1335,rule_1341,rule_1349,rule_1514,rule_1591,rule_1598,rule_1607,rule_3235,rule_3241,rule_3124,rule_2139,rule_322,rule_797,rule_3208,rule_3212,rule_2864,rule_2874,rule_993,rule_1922,rule_1971,rule_3087,rule_3097,rule_2130,rule_2137,rule_2163,rule_2166,rule_2212,rule_2230,rule_1738,rule_1766,rule_1768,rule_323,rule_339,rule_1647,rule_2000,rule_1900,rule_1936,rule_1942,rule_1987,rule_2098,rule_2123,rule_3284,rule_3285,rule_1104,rule_3049,rule_3077,rule_3089,rule_3100,rule_3101,rule_1105,rule_1162,rule_1288,rule_1348,rule_1513,rule_1606,rule_3327,rule_3328,rule_1250,rule_1263,rule_1266,rule_1343,rule_1489,rule_1494,rule_1601,rule_1196,rule_1346,rule_1400,rule_1604,rule_2691,rule_2718,rule_1841,rule_1885,rule_2965,rule_2989,rule_2416,rule_2478,rule_3272,rule_3274,rule_2647,rule_2672,rule_2833,rule_2954,rule_2961,rule_2963,rule_2966,rule_2967,rule_2977,rule_2986,rule_2990,rule_2991,rule_1249,rule_1286,rule_1483,rule_2558,rule_2569,rule_2570,rule_2571,rule_2580,rule_2583,rule_2592,rule_1016,rule_2431,rule_2568,rule_1017,rule_2434,rule_2608,rule_2564,rule_2860,rule_2356,rule_2390,rule_2430,rule_2456,rule_447,rule_662,rule_1756,rule_1783,rule_2900,rule_2911,rule_2869,rule_2877,rule_3139,rule_3155,rule_3207,rule_3211,rule_1104,rule_3049,rule_2637,rule_2661,rule_2682,rule_2706,rule_2754,rule_2793,rule_2748,rule_2785,rule_1790,rule_1790,rule_1796,rule_1796,rule_1818,rule_1867,rule_2755,rule_2756,rule_2759,rule_2763,rule_2776,rule_2794,rule_2798,rule_2802,rule_2578,rule_2615,rule_3114,rule_3115,rule_2148,rule_325,rule_2384,rule_2451,rule_3011,rule_3028,rule_2002,rule_2043,rule_2863,rule_2873,rule_2132,rule_2140,rule_2159,rule_2182,rule_2187,rule_2190,rule_2191,rule_2214,rule_2226,rule_2239,rule_2243,rule_2245,rule_2281,rule_2310,rule_2312,rule_2880,rule_2881,rule_3126,rule_3128,rule_3231,rule_3232,rule_3248,rule_3249,rule_3251,rule_155,rule_182,rule_1112,rule_1169,rule_1313,rule_1557,rule_2957,rule_2980,rule_2691,rule_2718,rule_1841,rule_1885,rule_2965,rule_2989,rule_2582,rule_2434,rule_2487,rule_2608,rule_2617,rule_2223,rule_2618,rule_3164,rule_3172,rule_3265,rule_3266,rule_3268,rule_3270,rule_3271,rule_1299,rule_1530,rule_1538,rule_2379,rule_2382,rule_2449,rule_2653,rule_2677,rule_2854,rule_3036,rule_3042,rule_3182,rule_3189,rule_3205,rule_3209,rule_1701,rule_1704,rule_1731,rule_3225,rule_3229,rule_2206,rule_2207,rule_2256,rule_3306,rule_3315,rule_3316,rule_2747,rule_2784,rule_1202,rule_1235,rule_1252,rule_1252,rule_1277,rule_1287,rule_1315,rule_1332,rule_1342,rule_1347,rule_1352,rule_1364,rule_1405,rule_1409,rule_1475,rule_1480,rule_1484,rule_1484,rule_1504,rule_1512,rule_1567,rule_1575,rule_1584,rule_1589,rule_1597,rule_1599,rule_1605,rule_1610,rule_1628,rule_1629,rule_1365,rule_1630,rule_1631,rule_2638,rule_2662,rule_2683,rule_2707,rule_2758,rule_2797,rule_2260,rule_2260,rule_2286,rule_2286,rule_2751,rule_2760,rule_2760,rule_2762,rule_2764,rule_2790,rule_2799,rule_2799,rule_2801,rule_2803,rule_3084,rule_3094,rule_2127,rule_2128,rule_2131,rule_2134,rule_2135,rule_2138,rule_2195,rule_2209,rule_2210,rule_2213,rule_2247,rule_2884,rule_2885,rule_1689,rule_1691,rule_1724,rule_2318,rule_2336,rule_2338,rule_2969,rule_2993,rule_2097,rule_2122,rule_3273,rule_3275,rule_2181,rule_2186,rule_2192,rule_2193,rule_2238,rule_2242,rule_2246,rule_3110,rule_3111,rule_3213,rule_3214,rule_3253,rule_3254,rule_3257,rule_2222,rule_1646,rule_1648,rule_1706,rule_1707,rule_1713,rule_1733,rule_2160,rule_2227,rule_2892,rule_2893,rule_2942,rule_2953,rule_3039,rule_3047,rule_2551,rule_2556,rule_2761,rule_2800,rule_1081,rule_1093,rule_1111,rule_1129,rule_1149,rule_1168,rule_2957,rule_2980,rule_1216,rule_1425,rule_1440,rule_2697,rule_2725,rule_1848,rule_1891,rule_3200,rule_3202,rule_1745,rule_1746,rule_1774,rule_2223,rule_1347,rule_1605,rule_2637,rule_2661,rule_2682,rule_2706,rule_1076,rule_1120,rule_1123,rule_2754,rule_2793,rule_2748,rule_2785,rule_2384,rule_2451,rule_3011,rule_3028,rule_2145,rule_2146,rule_2147,rule_2152,rule_2153,rule_2154,rule_2218,rule_2219,rule_2220,rule_2158,rule_2225,rule_2502,rule_2528,rule_2589,rule_2627,rule_3123,rule_3138,rule_3154,rule_1641,rule_1642,rule_1674,rule_1675,rule_1692,rule_1693,rule_1711,rule_1717,rule_1725,rule_1911,rule_1929,rule_1959,rule_1960,rule_1977,rule_2316,rule_2319,rule_2332,rule_2333,rule_2339,rule_2340,rule_2503,rule_2529,rule_3008,rule_3024,rule_1339,rule_1594,rule_3206,rule_3210,rule_3139,rule_3155,rule_3207,rule_3211,rule_1920,rule_1969,rule_2222,rule_2486,rule_2581,rule_1079,rule_1127,rule_2494,rule_2517,rule_2519,rule_44,rule_54,rule_1077,rule_1079,rule_1080,rule_1081,rule_1089,rule_1097,rule_1099,rule_1124,rule_1125,rule_1127,rule_1128,rule_1129,rule_1132,rule_1143,rule_1146,rule_1153,rule_1154,rule_1156,rule_2081,rule_2108,rule_2110,rule_2356,rule_2388,rule_2430,rule_2454,rule_2573,rule_2575,rule_3051,rule_3059,rule_2078,rule_2105,rule_2109,rule_2496,rule_2523,rule_2525,rule_682,rule_1671,rule_1673,rule_1716,rule_2315,rule_2329,rule_2331,rule_2409,rule_2473,rule_2747,rule_2784,rule_2546,rule_3118,rule_2545,rule_3104,rule_314,rule_328,rule_1739,rule_1740,rule_1767,rule_1903,rule_1944,rule_1952,rule_2126,rule_2133,rule_2208,rule_1085,rule_1135,rule_1139,rule_2144,rule_2151,rule_2217,rule_1203,rule_1410,rule_1414,rule_2160,rule_2181,rule_2186,rule_2227,rule_2238,rule_2242,rule_2892,rule_2893,rule_2942,rule_2953,rule_3039,rule_3047,rule_3110,rule_3111,rule_3213,rule_3214,rule_1082,rule_1115,rule_1130,rule_1172,rule_1920,rule_1969,rule_1273,rule_1308,rule_1547,rule_2390,rule_2456,rule_3054,rule_3062,rule_2487,rule_2617,rule_1336,rule_1255,rule_1949,rule_1989,rule_2200,rule_3311,rule_2161,rule_2164,rule_2228,rule_1086,rule_1136,rule_1140,rule_1902,rule_1951,rule_1902,rule_1951,rule_1699,rule_1729,rule_1993,rule_2003,rule_2014,rule_2017,rule_2021,rule_2027,rule_2029,rule_2031,rule_2044,rule_2056,rule_2060,rule_2064,rule_2065,rule_2072,rule_2073,rule_2322,rule_2344,rule_2548,rule_2553,rule_2564,rule_2761,rule_2800,rule_2853,rule_2860,rule_2865,rule_3069,rule_3072,rule_3137,rule_3203,rule_3204,rule_1111,rule_1168,rule_2013,rule_2022,rule_2054,rule_2066,rule_2067,rule_1644,rule_1645,rule_1708,rule_1712,rule_1734,rule_2004,rule_2018,rule_2045,rule_2061,rule_2327,rule_2353,rule_318,rule_332,rule_1339,rule_1594,rule_3206,rule_3210,rule_1905,rule_1906,rule_1907,rule_1946,rule_1947,rule_1948,rule_1954,rule_1955,rule_1956,rule_2178,rule_2180,rule_2184,rule_2185,rule_2194,rule_2197,rule_2237,rule_2241,rule_2249,rule_1092,rule_1101,rule_1147,rule_1148,rule_1158,rule_1159,rule_2004,rule_2013,rule_2017,rule_2045,rule_2054,rule_2060,rule_2322,rule_2327,rule_2344,rule_2353,rule_2143,rule_2150,rule_2169,rule_2170,rule_2216,rule_2232,rule_1078,rule_1088,rule_1126,rule_1131,rule_1138,rule_1142,rule_1898,rule_1931,rule_1939,rule_1940,rule_1980,rule_1986,rule_2023,rule_2068,rule_2069,rule_3262,rule_3263,rule_3280,rule_1904,rule_1945,rule_1953 failed!
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o -m1000 -finderrors -ndl
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
counter_ex:[]
******************************
Expansion
Instantiating rules...
Expansion result: before : 1577, after: 2177
<class 'list'>
******************************
Abstract and Strengthen


[Rulename]: NI_Replace3
guard:{'Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Replace3 has 1 parameter.
action part is empty


[Rulename]: NI_Replace4
guard:{'!Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Replace4 has 1 parameter.
action part is empty


[Rulename]: NI_InvAck_311
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = true', 'Sta.Dir.Dirty = true', 'Sta.Dir.HomeInvSet = false', 'NODE_2 = NODE_1 | Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_InvAck_311 has 1 parameter.

Print abstract rule of NI_InvAck_311, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;


[Rulename]: NI_InvAck_212
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.Local = false', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 32 predicates

include 1 abstract type

Rule NI_InvAck_212 has 1 parameter.

Print abstract rule of NI_InvAck_212, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;


[Rulename]: NI_InvAck_113
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_InvAck_113 has 1 parameter.

Print abstract rule of NI_InvAck_113, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false ;
	Sta.Dir.Local := false;


[Rulename]: NI_InvAck_exists14
guard:{'Sta.InvMsg[NODE_2].Cmd = INV_InvAck', 'Sta.Dir.InvSet[NODE_2] = true', 'NODE_1 != NODE_2', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1]'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_InvAck_exists14 has 2 parameter.

Print abstract rule of NI_InvAck_exists14, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.InvMsg[NODE_2].Cmd := INV_None ;
	Sta.Dir.InvSet[NODE_2] := false;
action part is empty
action part is empty


[Rulename]: NI_InvAck_exists_Home15
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.HomeInvSet'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_InvAck_exists_Home15 has 1 parameter.
action part is empty


[Rulename]: NI_Inv16
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Inv16 has 1 parameter.
action part is empty


[Rulename]: NI_Inv17
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Inv17 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_PutX18
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_GetX', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX'}
Strengthening 1 time, find 26 predicates

include 1 abstract type

Rule NI_Remote_PutX18 has 1 parameter.
stmt:Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data,assign:Sta.UniMsg[NODE_1].Data,rep_dict[assign]:Sta.CurrData
stmt:Sta.Proc[NODE_1].CacheData := Sta.CurrData
action part is empty


[Rulename]: NI_Remote_Put20
guard:{'Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 8 predicates

include 1 abstract type

Rule NI_Remote_Put20 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_Put21
guard:{'!Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 8 predicates

include 1 abstract type

Rule NI_Remote_Put21 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_GetX_PutX_Home24
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Remote_GetX_PutX_Home24 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_GetX_PutX_Home24, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_PutX ;
	Sta.HomeUniMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_GetX_PutX25
guard:{'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 38 predicates

include 2 abstract type

Rule NI_Remote_GetX_PutX25 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;


[Rulename]: NI_Remote_GetX_Nak_Home26
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_GetX_Nak_Home26 has 1 parameter.

Print abstract rule of NI_Remote_GetX_Nak_Home26, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Remote_GetX_Nak27
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 25 predicates

include 2 abstract type

Rule NI_Remote_GetX_Nak27 has 2 parameter.

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Local_GetX_PutX_1128
guard:{'Sta.Dir.Local = true', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_1128 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_1128, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_1029
guard:{'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_1029 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_10_Home30
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_10_Home30 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_10_Home30, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_931
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_931 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_931, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_932
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_932 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_932, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_8_NODE_Get33
guard:{'Sta.Dir.Local = true', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_8_NODE_Get33 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_834
guard:{'Sta.Dir.Local = true', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_834 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_8_Home_NODE_Get35
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home_NODE_Get35 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home_NODE_Get35, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_8_Home36
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home36 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home36, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get37
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get37 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get37, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get38
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get38 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get38, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_739
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_739 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_739, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_740
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_740 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_740, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_641
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_641 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_641, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_542
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_542 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_542, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_443
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'Sta.Dir.Pending = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_443 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_443, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_344
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_344 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_344, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_245
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_245 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_245, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_146
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_146 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_146, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_GetX47
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX47 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX47, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_GetX_GetX48
guard:{'Sta.Dir.Dirty = true', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX48 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX48, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_GetX_Nak49
guard:{'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 10 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak49 has 1 parameter.
action part is empty


[Rulename]: NI_Local_GetX_Nak50
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.CacheState != CACHE_E'}
Strengthening 1 time, find 18 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak50 has 1 parameter.
action part is empty


[Rulename]: NI_Local_GetX_Nak51
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1'}
Strengthening 1 time, find 17 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak51 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_Get_Put_Home52
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_Get'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Remote_Get_Put_Home52 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_Get_Put_Home52, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Put ;
	Sta.HomeUniMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_Get_Put53
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 38 predicates

include 2 abstract type

Rule NI_Remote_Get_Put53 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Put ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_Get_Nak_Home54
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_Get_Nak_Home54 has 1 parameter.

Print abstract rule of NI_Remote_Get_Nak_Home54, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Remote_Get_Nak55
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 25 predicates

include 2 abstract type

Rule NI_Remote_Get_Nak55 has 2 parameter.

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Local_Get_Put_Dirty56
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Dirty56 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Dirty56, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Dirty := false ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.MemData := Sta.HomeProc.CacheData ;
	Sta.HomeProc.CacheState := CACHE_S;


[Rulename]: NI_Local_Get_Put57
guard:{'Sta.Dir.HeadVld = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Local_Get_Put57 has 1 parameter.

Print abstract rule of NI_Local_Get_Put57, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false;


[Rulename]: NI_Local_Get_Put_Head58
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Head58 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Head58, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.ShrVld := true ;
	for p : NODE do
    if (p = Other) then
      Sta.Dir.InvSet[p] := true ;
	else
      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p] ;
	Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet;


[Rulename]: NI_Local_Get_Get59
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Get59 has 1 parameter.

Print abstract rule of NI_Local_Get_Get59, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_Get_Get60
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Get60 has 1 parameter.

Print abstract rule of NI_Local_Get_Get60, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_Get_Nak61
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 9 predicates

include 1 abstract type

Rule NI_Local_Get_Nak61 has 1 parameter.
action part is empty


[Rulename]: NI_Local_Get_Nak62
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get'}
Strengthening 1 time, find 17 predicates

include 1 abstract type

Rule NI_Local_Get_Nak62 has 1 parameter.
action part is empty


[Rulename]: NI_Local_Get_Nak63
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Local_Get_Nak63 has 1 parameter.
action part is empty


[Rulename]: NI_Nak66
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Nak'}
Strengthening 1 time, find 4 predicates

include 1 abstract type

Rule NI_Nak66 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_Replace68
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_S'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule PI_Remote_Replace68 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_PutX71
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule PI_Remote_PutX71 has 1 parameter.
stmt:Sta.WbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.WbMsg.Data := Sta.CurrData

Print abstract rule of PI_Remote_PutX71, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.WbMsg.Cmd := WB_Wb ;
	Sta.WbMsg.Proc := Other ;
	Sta.WbMsg.HomeProc := false ;
	Sta.WbMsg.Data := Sta.CurrData;


[Rulename]: PI_Remote_GetX80
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule PI_Remote_GetX80 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_Get84
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule PI_Remote_Get84 has 1 parameter.
action part is empty


[Rulename]: Store_Home85
guard:{'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 0 abstract type

Rule Store_Home85 has no parameter.


[Rulename]: Store86
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule Store86 has 1 parameter.

Print abstract rule of Store86, abstract NODE_1
para_dcit:{'DATA_1': 'DATA', 'NODE_1': 'NODE'}
action:
	Sta.CurrData := DATA_1;
select candidate association rules: before: 2177, after: 130
Symmetry reducing rules...
Remove redundant: before : 130, after: 130
all_types:{'NODE': 'NODE_NUM', 'DATA': 'DATA_NUM'}
Reduction result: before : 130, after: 107
******************************
Recheck rules by murphi


[Rulename]: NI_Replace3
guard:{'Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Replace3 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Replace4
guard:{'!Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Replace4 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_InvAck_311
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = true', 'Sta.Dir.Dirty = true', 'Sta.Dir.HomeInvSet = false', 'NODE_2 = NODE_1 | Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 10 predicates

include 1 abstract type

Rule NI_InvAck_311 has 1 parameter.

Print abstract rule of NI_InvAck_311, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_311: 13
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Dirty = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Dirty = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_InvAck_212
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.Local = false', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 15 predicates

include 1 abstract type

Rule NI_InvAck_212 has 1 parameter.

Print abstract rule of NI_InvAck_212, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_212: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.HeadVld = true', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.ShrVld = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.Dirty = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.MemData = Sta.CurrData', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.Pending = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_InvAck_113
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 10 predicates

include 1 abstract type

Rule NI_InvAck_113 has 1 parameter.

Print abstract rule of NI_InvAck_113, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false ;
	Sta.Dir.Local := false;
-- Auxiliary invariants used by NI_InvAck_113: 10
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_InvAck_exists14
guard:{'Sta.InvMsg[NODE_2].Cmd = INV_InvAck', 'Sta.Dir.InvSet[NODE_2] = true', 'NODE_1 != NODE_2', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1]'}
Strengthening 1 time, find 11 predicates

include 2 abstract type

Rule NI_InvAck_exists14 has 2 parameter.

Print abstract rule of NI_InvAck_exists14, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.InvMsg[NODE_2].Cmd := INV_None ;
	Sta.Dir.InvSet[NODE_2] := false;
action part is empty
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists14: 16
string_list:['Sta.Dir.InvSet[NODE_2] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.Local = true']


[Rulename]: NI_InvAck_exists_Home15
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.HomeInvSet'}
Strengthening 1 time, find 10 predicates

include 1 abstract type

Rule NI_InvAck_exists_Home15 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists_Home15: 11
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.Pending = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Inv16
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Inv16 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Inv16: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_Inv17
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Inv17 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Inv17: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_Remote_PutX18
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_GetX', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_PutX18 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_PutX18: 12
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadVld = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_Remote_Put20
guard:{'Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Remote_Put20 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_Put20: 1
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: NI_Remote_Put21
guard:{'!Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Remote_Put21 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_Put21: 1
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: NI_Remote_GetX_PutX_Home24
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_GetX_PutX_Home24 has 1 parameter.

Print abstract rule of NI_Remote_GetX_PutX_Home24, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_PutX;
-- Auxiliary invariants used by NI_Remote_GetX_PutX_Home24: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck']


[Rulename]: NI_Remote_GetX_PutX25
guard:{'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_Remote_GetX_PutX25 has 2 parameter.

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
-- Auxiliary invariants used by NI_Remote_GetX_PutX25: 26
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false']


[Rulename]: NI_Remote_GetX_Nak_Home26
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_GetX_Nak_Home26 has 1 parameter.

Print abstract rule of NI_Remote_GetX_Nak_Home26, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
string_list:[]


[Rulename]: NI_Remote_GetX_Nak27
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 14 predicates

include 2 abstract type

Rule NI_Remote_GetX_Nak27 has 2 parameter.

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_GetX_Nak27: 14
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck']


[Rulename]: NI_Local_GetX_PutX_1128
guard:{'Sta.Dir.Local = true', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_1128 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_1128, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_1029
guard:{'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_1029 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_1029: 2
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.HeadPtr = NODE_2 -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_10_Home30
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_10_Home30 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_10_Home30, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_931
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_931 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_931, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_932
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_932 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_932, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_8_NODE_Get33
guard:{'Sta.Dir.Local = true', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_8_NODE_Get33 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_8_NODE_Get33: 3
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.Local = true & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.HeadPtr = NODE_2 -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_834
guard:{'Sta.Dir.Local = true', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_834 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_834: 3
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.Local = true & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.HeadPtr = NODE_2 -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_8_Home_NODE_Get35
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home_NODE_Get35 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home_NODE_Get35, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_8_Home36
guard:{'Sta.Dir.HomeShrSet', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home36 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home36, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get37
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get37 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get37, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get38
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get38 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get38, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_739
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_739 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_739, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_740
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_740 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_740, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_641
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_641 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_641, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_542
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_542 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_542, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_443
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'Sta.Dir.Pending = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_443 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_443, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_344
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_344 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_344, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_245
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_245 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_245, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_146
guard:{'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.ProcCmd = NODE_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_146 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_146, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_GetX47
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX47 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX47, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_GetX_GetX48
guard:{'Sta.Dir.Dirty = true', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX48 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX48, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_GetX_Nak49
guard:{'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak49 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_GetX_Nak50
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.HomeProc.CacheState != CACHE_E'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak50 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_GetX_Nak51
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadPtr = NODE_1'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak51 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Remote_Get_Put_Home52
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_Get'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_Get_Put_Home52 has 1 parameter.

Print abstract rule of NI_Remote_Get_Put_Home52, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Put;
-- Auxiliary invariants used by NI_Remote_Get_Put_Home52: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck']


[Rulename]: NI_Remote_Get_Put53
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_Remote_Get_Put53 has 2 parameter.

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Put ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
-- Auxiliary invariants used by NI_Remote_Get_Put53: 26
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S']


[Rulename]: NI_Remote_Get_Nak_Home54
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1', 'Sta.HomeUniMsg.Cmd = UNI_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_Get_Nak_Home54 has 1 parameter.

Print abstract rule of NI_Remote_Get_Nak_Home54, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
string_list:[]


[Rulename]: NI_Remote_Get_Nak55
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].HomeProc = false'}
Strengthening 1 time, find 14 predicates

include 2 abstract type

Rule NI_Remote_Get_Nak55 has 2 parameter.

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_Get_Nak55: 14
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S']


[Rulename]: NI_Local_Get_Put_Dirty56
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Dirty56 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Dirty56, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Dirty := false ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.MemData := Sta.HomeProc.CacheData ;
	Sta.HomeProc.CacheState := CACHE_S;
string_list:[]


[Rulename]: NI_Local_Get_Put57
guard:{'Sta.Dir.HeadVld = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put57 has 1 parameter.

Print abstract rule of NI_Local_Get_Put57, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false;
string_list:[]


[Rulename]: NI_Local_Get_Put_Head58
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Head58 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Head58, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.ShrVld := true ;
	for p : NODE do
    if (p = Other) then
      Sta.Dir.InvSet[p] := true ;
	else
      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p] ;
	Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet;
string_list:[]


[Rulename]: NI_Local_Get_Get59
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Get59 has 1 parameter.

Print abstract rule of NI_Local_Get_Get59, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_Get_Get60
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = false'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Get60 has 1 parameter.

Print abstract rule of NI_Local_Get_Get60, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_Get_Nak61
guard:{'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak61 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_Get_Nak62
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak62 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_Get_Nak63
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak63 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Nak66
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Nak'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Nak66 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: PI_Remote_Replace68
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_S'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule PI_Remote_Replace68 has 1 parameter.
action part is empty
-- Auxiliary invariants used by PI_Remote_Replace68: 1
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: PI_Remote_PutX71
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule PI_Remote_PutX71 has 1 parameter.

Print abstract rule of PI_Remote_PutX71, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.WbMsg.Cmd := WB_Wb ;
	Sta.WbMsg.Proc := Other ;
	Sta.WbMsg.HomeProc := false;
-- Auxiliary invariants used by PI_Remote_PutX71: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck']


[Rulename]: PI_Remote_GetX80
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule PI_Remote_GetX80 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: PI_Remote_Get84
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule PI_Remote_Get84 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: Store_Home85
guard:{'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 0 abstract type

Rule Store_Home85 has no parameter.
string_list:[]


[Rulename]: Store86
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule Store86 has 1 parameter.

Print abstract rule of Store86, abstract NODE_1
para_dcit:{'DATA_1': 'DATA', 'NODE_1': 'NODE'}
action:
	Sta.CurrData := DATA_1;
-- Auxiliary invariants used by Store86: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck']
checking ./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m

checking invariants...
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
num core = 1, type = <class 'int'>
ranges [(0, 107)]
start:0,end:1
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
new_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o -m1000 -finderrors -ndl -m100
compile murphi file to cpp....
Wrong ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:169: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:200: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:232: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:584: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:623: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:666: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:707: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:748: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:792: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:839: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:885: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:932: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:976: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1021: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1066: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1110: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1146: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1182: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1218: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1248: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1278: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1308: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1525: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1741: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1776: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1844: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1880: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2043: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2099:Other undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2099:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2124:Other undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2124:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2156:Other undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2156:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2183:Other undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2184:Arguments of = or <> must have same types.

Traceback (most recent call last):
  File "main.py", line 530, in <module>
    sys.exit(main(sys.argv[1:]))
  File "main.py", line 518, in main
    all(data_dir, args, murphi_url, recalculate=args.recalculate == 'y')
  File "main.py", line 474, in all
    cmp(data_dir, args, all_types, aux_invs, abs_filename, prot_analyzer)
  File "main.py", line 297, in cmp
    counterex_index = checker.check_usedF(used_inv_string_list, 1, abs_filename,
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 219, in check_usedF
    spurious_cnt, counterex_index = self.select_invariant(test_rule_string, keep_file=keep_file, num_core=num_core,
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 57, in select_invariant
    spurious_index.extend(self.parallel(len(jobs), 1, translate_dic, original_file, keep_file, aux_para))
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 102, in parallel
    counter_ex_list = run_murphi_all(self.data_dir, self.name, 'ABS_{0}_{1}'.format(self.name, id), self.murphi_dir, aux_para)
  File "/home/lyj238/protocol/project/murphi_analysis/call_murphi.py", line 84, in run_murphi_all
    raise ValueError
ValueError
